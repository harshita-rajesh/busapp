{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Week-0/MERN-main/frontend/src/components/DriverKYC.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function KYCProcess() {\n//     const [step, setStep] = useState(1);\n//     const [driverInfo, setDriverInfo] = useState({ name: '', phone: '+91', email: 'hello@mail.com' });\n//     const [driverLicense, setDriverLicense] = useState(null);\n//     const [idCard, setIdCard] = useState(null);\n//     const [selfie, setSelfie] = useState(null);\n//     const [statusMessage, setStatusMessage] = useState('');\n//     const [dateOfExpiry, setDateOfExpiry] = useState('');\n//     const [idType, setIdType] = useState('');  // Added this line to define idType state\n//     const acceptedIdTypes = ['aadhaar', 'passport', 'pan'];\n//     const [status, setStatus] = useState('');\n\n//     const headers = {\n//         appId: 'yvdxyy',\n//         appKey: '9epukpvlpl1asl3bym4j',\n//         transactionId: 'driverkyc'\n//     };\n\n//     const handleFileUpload = (e, setFile) => {\n//         const file = e.target.files[0];\n//         if (file && ['image/jpeg', 'image/png', 'application/pdf'].includes(file.type)) {\n//             setFile(file);\n//         } else {\n//             alert('Invalid file type. Please upload JPG, PNG, or PDF.');\n//         }\n//     };\n\n//     const validateDL = async () => {\n//         setStatus('Validating Driver License...');\n//         const formData = new FormData();\n//         formData.append('image', driverLicense);\n//         formData.append('countryId', 'ind');\n//         formData.append('documentId', 'dl');\n//         formData.append('expectedDocumentSide', 'front');\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, { headers });\n//             console.log('API Response:', response.data);\n\n//             const details = response.data?.result?.details?.[0]?.fieldsExtracted;\n\n//             if (details?.dateOfExpiry?.value) {\n//                 const expiryDate = details.dateOfExpiry.value;\n//                 setDateOfExpiry(expiryDate);\n\n//                 const expiryDateObj = new Date(expiryDate.split('-').reverse().join('-'));\n//                 if (expiryDateObj > new Date()) {\n//                     setStatus('Driver License validated successfully!');\n//                     return true;\n//                 } else {\n//                     setStatus('Driver License is expired.');\n//                     return false;\n//                 }\n//             } else {\n//                 setStatus('Unable to fetch Driver License details.');\n//                 return false;\n//             }\n//         } catch (error) {\n//             console.error('Error validating Driver License:', error);\n//             setStatus('Validation failed.');\n//             return false;\n//         }\n//     };\n\n//     const validateIDCard = async () => {\n//         if (!idCard || !idType) {\n//             setStatus('Please provide both ID card and select a valid ID type.');\n//             return false;\n//         }\n\n//         setStatus('Validating ID Card...');\n//         const formData = new FormData();\n//         formData.append('file', idCard);\n//         formData.append('countryId', 'ind'); // Ensure the countryId is correct\n\n//         // Map selected ID type to the corresponding document ID\n//         const documentIdMap = {\n//             aadhaar: 'id',       // Aadhaar is 'id' in the document API\n//             pan: 'pan',          // PAN is 'pan'\n//             passport: 'passport', // Passport is 'passport'\n//         };\n\n//         const documentId = documentIdMap[idType.toLowerCase()]; // Get document ID from the map\n\n//         if (!documentId) {\n//             setStatus('Please select a valid ID type.');\n//             return false;\n//         }\n\n//         formData.append('documentId', documentId); // Use mapped documentId\n//         formData.append('expectedDocumentSide', 'front');\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, { headers });\n//             console.log('API Response:', response.data);\n\n//             const details = response.data?.result?.details?.[0]?.fieldsExtracted;\n\n//             if (details) {\n//                 // Check if the important fields (fullName, dateOfBirth, idNumber) are extracted\n//                 const { fullName, dateOfBirth, idNumber } = details;\n\n//                 if (fullName && dateOfBirth && idNumber) {\n//                     setStatus(`${idType.charAt(0).toUpperCase() + idType.slice(1)} validated successfully!`);\n//                     setStep(4); // Move to next step after ID validation\n//                     return true;\n//                 } else {\n//                     setStatus('Missing important details in the ID card.');\n//                     return false;\n//                 }\n//             } else {\n//                 setStatus('Unable to fetch ID card details.');\n//                 return false;\n//             }\n//         } catch (error) {\n//             console.error('Error validating ID Card:', error);\n//             setStatus('Validation failed.');\n//             return false;\n//         }\n//     };\n\n//         const validateSelfie = async () => {\n//         if (!selfie) return false;\n//         setStatus('Validating selfie...');\n//         const formData = new FormData();\n//         formData.append('file', selfie);\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/checkLiveness', formData, { headers });\n//             return response.data.isLive;\n//         } catch (error) {\n//             console.error('Error validating selfie:', error);\n//             setStatus('Selfie validation failed.');\n//             return false;\n//         }\n//     };\n\n//     const matchFace = async () => {\n//         const formData = new FormData();\n//         formData.append('selfie', selfie);\n//         formData.append('idCard', idCard);\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/matchFace', formData, { headers });\n//             return response.data.isMatch;\n//         } catch (error) {\n//             console.error('Error matching face:', error);\n//             setStatus('Face match failed.');\n//             return false;\n//         }\n//     };\n\n//     const handleSubmitDL = async () => {\n//         setStatusMessage('Validating Driver License...');\n//         const isDLValid = await validateDL();\n\n//         if (isDLValid) {\n//             setStep(3);\n//             setStatusMessage(`Driver's License is valid.`);\n//         } else {\n//             setStatusMessage(`Validation failed`);\n//         }\n//     };\n//     const handleSubmitID = async () => {\n//         setStatusMessage('Validating ID Card...');\n//         const isIDValid = await validateIDCard();\n\n//         if (isIDValid) {\n//             setStep(4); // Proceed to next step after successful ID validation\n//         } else {\n//             setStatusMessage('ID Card validation faileddd.');\n//         }\n//     };\n\n//     const handleSubmitSelfie = async () => {\n//         setStatusMessage('Validating selfie...');\n//         const isSelfieValid = await validateSelfie();\n//         const isFaceMatch = await matchFace();\n//         if (isSelfieValid && isFaceMatch) {\n//             setStatusMessage('KYC process completed successfully.');\n//             setStep(5);\n//         } else {\n//             setStatusMessage('Selfie verification or face match failed.');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Driver KYC Process</h2>\n\n//             {step === 1 && (\n//                 <div>\n//                     <h3>Step 1: Basic Information</h3>\n//                     <input \n//                         type=\"text\" \n//                         placeholder=\"Name\" \n//                         onChange={(e) => setDriverInfo({ ...driverInfo, name: e.target.value })} \n//                     />\n//                     <input \n//                         type=\"text\" \n//                         placeholder=\"Phone\" \n//                         value={driverInfo.phone} \n//                         onChange={(e) => e.target.value.length <= 13 && setDriverInfo({ ...driverInfo, phone: e.target.value })} \n//                     />\n//                     <input \n//                         type=\"email\" \n//                         placeholder=\"Email\" \n//                         value={driverInfo.email} \n//                         onChange={(e) => setDriverInfo({ ...driverInfo, email: e.target.value })} \n//                     />\n//                     <button onClick={() => setStep(2)}>Next</button>\n//                 </div>\n//             )}\n\n//             {step === 2 && (\n//                 <div>\n//                     <h3>Step 2: Upload Driver's License</h3>\n//                     <input \n//                         type=\"file\" \n//                         accept=\".jpg,.png,.pdf\" \n//                         onChange={(e) => handleFileUpload(e, setDriverLicense)} \n//                     />\n//                     <button onClick={handleSubmitDL}>Submit</button>\n//                 </div>\n//             )}\n\n//             {step === 3 && (\n//                 <div>\n//                     <h3>Step 3: Upload ID Card</h3>\n//                     <label>Select ID Type:</label>\n//                     <select value={idType} onChange={(e) => setIdType(e.target.value)}>\n//                         <option value=\"\">--Select--</option>\n//                         <option value=\"aadhaar\">Aadhaar</option>\n//                         <option value=\"passport\">Passport</option>\n//                         <option value=\"pan\">PAN</option>\n//                     </select>\n//                     <input \n//                         type=\"file\" \n//                         accept=\".jpg,.png,.pdf\" \n//                         onChange={(e) => handleFileUpload(e, setIdCard)} \n//                     />\n//                     <button onClick={handleSubmitID}>Submit</button>\n//                 </div>\n//             )}\n\n//             {step === 4 && (\n//                 <div>\n//                     <h3>Step 4: Upload Selfie</h3>\n//                     <input \n//                         type=\"file\" \n//                         accept=\".jpg,.png\" \n//                         onChange={(e) => handleFileUpload(e, setSelfie)} \n//                     />\n//                     <button onClick={handleSubmitSelfie}>Submit</button>\n//                 </div>\n//             )}\n\n//             <p>{statusMessage}</p>\n//         </div>\n//     );\n// }\n\n// export default KYCProcess;\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction KYCProcess() {\n  _s();\n  const [step, setStep] = useState(1);\n  const [driverInfo, setDriverInfo] = useState({\n    name: '',\n    phone: '+91',\n    email: 'hello@mail.com'\n  });\n  const [driverLicense, setDriverLicense] = useState(null);\n  const [idCard, setIdCard] = useState(null);\n  const [selfie, setSelfie] = useState(null);\n  const [statusMessage, setStatusMessage] = useState('');\n  const [dateOfExpiry, setDateOfExpiry] = useState('');\n  const [idType, setIdType] = useState('');\n  const [status, setStatus] = useState('');\n  const headers = {\n    appId: 'yvdxyy',\n    appKey: '9epukpvlpl1asl3bym4j',\n    transactionId: 'driverkyc'\n  };\n  const handleFileUpload = (e, setFile) => {\n    const file = e.target.files[0];\n    if (file && ['image/jpeg', 'image/png', 'application/pdf'].includes(file.type)) {\n      setFile(file);\n    } else {\n      alert('Invalid file type. Please upload JPG, PNG, or PDF.');\n    }\n  };\n  const validateDL = async () => {\n    setStatus('Validating Driver License...');\n    const formData = new FormData();\n    formData.append('image', driverLicense);\n    formData.append('countryId', 'ind');\n    formData.append('documentId', 'dl');\n    formData.append('expectedDocumentSide', 'front');\n    try {\n      var _response$data, _response$data$result, _response$data$result2, _response$data$result3, _details$dateOfExpiry;\n      const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, {\n        headers\n      });\n      const details = (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$result = _response$data.result) === null || _response$data$result === void 0 ? void 0 : (_response$data$result2 = _response$data$result.details) === null || _response$data$result2 === void 0 ? void 0 : (_response$data$result3 = _response$data$result2[0]) === null || _response$data$result3 === void 0 ? void 0 : _response$data$result3.fieldsExtracted;\n      if (details !== null && details !== void 0 && (_details$dateOfExpiry = details.dateOfExpiry) !== null && _details$dateOfExpiry !== void 0 && _details$dateOfExpiry.value) {\n        const expiryDate = details.dateOfExpiry.value;\n        setDateOfExpiry(expiryDate);\n        const expiryDateObj = new Date(expiryDate.split('-').reverse().join('-'));\n        if (expiryDateObj > new Date()) {\n          setStatus('Driver License validated successfully!');\n          return true;\n        } else {\n          setStatus('Driver License is expired.');\n          return false;\n        }\n      } else {\n        setStatus('Unable to fetch Driver License details.');\n        return false;\n      }\n    } catch (error) {\n      console.error('Error validating Driver License:', error);\n      setStatus('Validation failed.');\n      return false;\n    }\n  };\n  const validateSelfie = async () => {\n    if (!selfie) return false;\n    setStatus('Validating selfie...');\n    const formData = new FormData();\n    formData.append('file', selfie);\n    try {\n      const response = await axios.post('https://ind.idv.hyperverge.co/v1/checkLiveness', formData, {\n        headers\n      });\n      return response.data.isLive;\n    } catch (error) {\n      console.error('Error validating selfie:', error);\n      setStatus('Selfie validation failed.');\n      return false;\n    }\n  };\n  const matchFace = async () => {\n    const formData = new FormData();\n    formData.append('selfie', selfie);\n    formData.append('idCard', idCard);\n    try {\n      const response = await axios.post('https://ind.idv.hyperverge.co/v1/matchFace', formData, {\n        headers\n      });\n      return response.data.isMatch;\n    } catch (error) {\n      console.error('Error matching face:', error);\n      setStatus('Face match failed.');\n      return false;\n    }\n  };\n  const handleSubmitDL = async () => {\n    setStatusMessage('Validating Driver License...');\n    const isDLValid = await validateDL();\n    if (isDLValid) {\n      setStep(3);\n      setStatusMessage(`Driver's License is valid.`);\n    } else {\n      setStatusMessage(`Validation failed`);\n    }\n  };\n  const handleSubmitID = async () => {\n    setStatusMessage('Validating ID Card...');\n    const isIDValid = await validateIDCard();\n    if (isIDValid) {\n      setStep(4);\n    } else {\n      setStatusMessage('ID Card validation failed.');\n    }\n  };\n  const handleSubmitSelfie = async () => {\n    setStatusMessage('Validating selfie...');\n    const isSelfieValid = await validateSelfie();\n    const isFaceMatch = await matchFace();\n    if (isSelfieValid && isFaceMatch) {\n      setStatusMessage('KYC process completed successfully.');\n      setStep(5);\n    } else {\n      setStatusMessage('Selfie verification or face match failed.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Driver KYC Process\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 13\n    }, this), step === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Step 1: Basic Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        onChange: e => setDriverInfo({\n          ...driverInfo,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Phone\",\n        value: driverInfo.phone,\n        onChange: e => e.target.value.length <= 13 && setDriverInfo({\n          ...driverInfo,\n          phone: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: driverInfo.email,\n        onChange: e => setDriverInfo({\n          ...driverInfo,\n          email: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setStep(2),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 17\n    }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Step 2: Upload Driver's License\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".jpg,.png,.pdf\",\n        onChange: e => handleFileUpload(e, setDriverLicense)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmitDL,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 17\n    }, this), step === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Step 3: Upload ID Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select ID Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: idType,\n        onChange: e => setIdType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Select--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"aadhaar\",\n          children: \"Aadhaar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"passport\",\n          children: \"Passport\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pan\",\n          children: \"PAN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".jpg,.png,.pdf\",\n        onChange: e => handleFileUpload(e, setIdCard)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmitID,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 17\n    }, this), step === 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Step 4: Upload Selfie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".jpg,.png\",\n        onChange: e => handleFileUpload(e, setSelfie)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmitSelfie,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 401,\n    columnNumber: 9\n  }, this);\n}\n_s(KYCProcess, \"KcWWPwYz41bpZPHd8k/00GYnx9o=\");\n_c = KYCProcess;\nexport default KYCProcess;\nvar _c;\n$RefreshReg$(_c, \"KYCProcess\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","KYCProcess","_s","step","setStep","driverInfo","setDriverInfo","name","phone","email","driverLicense","setDriverLicense","idCard","setIdCard","selfie","setSelfie","statusMessage","setStatusMessage","dateOfExpiry","setDateOfExpiry","idType","setIdType","status","setStatus","headers","appId","appKey","transactionId","handleFileUpload","e","setFile","file","target","files","includes","type","alert","validateDL","formData","FormData","append","_response$data","_response$data$result","_response$data$result2","_response$data$result3","_details$dateOfExpiry","response","post","details","data","result","fieldsExtracted","value","expiryDate","expiryDateObj","Date","split","reverse","join","error","console","validateSelfie","isLive","matchFace","isMatch","handleSubmitDL","isDLValid","handleSubmitID","isIDValid","validateIDCard","handleSubmitSelfie","isSelfieValid","isFaceMatch","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","length","onClick","accept","_c","$RefreshReg$"],"sources":["/home/user/Desktop/Week-0/MERN-main/frontend/src/components/DriverKYC.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function KYCProcess() {\n//     const [step, setStep] = useState(1);\n//     const [driverInfo, setDriverInfo] = useState({ name: '', phone: '+91', email: 'hello@mail.com' });\n//     const [driverLicense, setDriverLicense] = useState(null);\n//     const [idCard, setIdCard] = useState(null);\n//     const [selfie, setSelfie] = useState(null);\n//     const [statusMessage, setStatusMessage] = useState('');\n//     const [dateOfExpiry, setDateOfExpiry] = useState('');\n//     const [idType, setIdType] = useState('');  // Added this line to define idType state\n//     const acceptedIdTypes = ['aadhaar', 'passport', 'pan'];\n//     const [status, setStatus] = useState('');\n\n//     const headers = {\n//         appId: 'yvdxyy',\n//         appKey: '9epukpvlpl1asl3bym4j',\n//         transactionId: 'driverkyc'\n//     };\n\n//     const handleFileUpload = (e, setFile) => {\n//         const file = e.target.files[0];\n//         if (file && ['image/jpeg', 'image/png', 'application/pdf'].includes(file.type)) {\n//             setFile(file);\n//         } else {\n//             alert('Invalid file type. Please upload JPG, PNG, or PDF.');\n//         }\n//     };\n\n//     const validateDL = async () => {\n//         setStatus('Validating Driver License...');\n//         const formData = new FormData();\n//         formData.append('image', driverLicense);\n//         formData.append('countryId', 'ind');\n//         formData.append('documentId', 'dl');\n//         formData.append('expectedDocumentSide', 'front');\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, { headers });\n//             console.log('API Response:', response.data);\n\n//             const details = response.data?.result?.details?.[0]?.fieldsExtracted;\n\n//             if (details?.dateOfExpiry?.value) {\n//                 const expiryDate = details.dateOfExpiry.value;\n//                 setDateOfExpiry(expiryDate);\n\n//                 const expiryDateObj = new Date(expiryDate.split('-').reverse().join('-'));\n//                 if (expiryDateObj > new Date()) {\n//                     setStatus('Driver License validated successfully!');\n//                     return true;\n//                 } else {\n//                     setStatus('Driver License is expired.');\n//                     return false;\n//                 }\n//             } else {\n//                 setStatus('Unable to fetch Driver License details.');\n//                 return false;\n//             }\n//         } catch (error) {\n//             console.error('Error validating Driver License:', error);\n//             setStatus('Validation failed.');\n//             return false;\n//         }\n//     };\n\n//     const validateIDCard = async () => {\n//         if (!idCard || !idType) {\n//             setStatus('Please provide both ID card and select a valid ID type.');\n//             return false;\n//         }\n    \n//         setStatus('Validating ID Card...');\n//         const formData = new FormData();\n//         formData.append('file', idCard);\n//         formData.append('countryId', 'ind'); // Ensure the countryId is correct\n    \n//         // Map selected ID type to the corresponding document ID\n//         const documentIdMap = {\n//             aadhaar: 'id',       // Aadhaar is 'id' in the document API\n//             pan: 'pan',          // PAN is 'pan'\n//             passport: 'passport', // Passport is 'passport'\n//         };\n    \n//         const documentId = documentIdMap[idType.toLowerCase()]; // Get document ID from the map\n    \n//         if (!documentId) {\n//             setStatus('Please select a valid ID type.');\n//             return false;\n//         }\n    \n//         formData.append('documentId', documentId); // Use mapped documentId\n//         formData.append('expectedDocumentSide', 'front');\n    \n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, { headers });\n//             console.log('API Response:', response.data);\n    \n//             const details = response.data?.result?.details?.[0]?.fieldsExtracted;\n    \n//             if (details) {\n//                 // Check if the important fields (fullName, dateOfBirth, idNumber) are extracted\n//                 const { fullName, dateOfBirth, idNumber } = details;\n    \n//                 if (fullName && dateOfBirth && idNumber) {\n//                     setStatus(`${idType.charAt(0).toUpperCase() + idType.slice(1)} validated successfully!`);\n//                     setStep(4); // Move to next step after ID validation\n//                     return true;\n//                 } else {\n//                     setStatus('Missing important details in the ID card.');\n//                     return false;\n//                 }\n//             } else {\n//                 setStatus('Unable to fetch ID card details.');\n//                 return false;\n//             }\n//         } catch (error) {\n//             console.error('Error validating ID Card:', error);\n//             setStatus('Validation failed.');\n//             return false;\n//         }\n//     };\n    \n//         const validateSelfie = async () => {\n//         if (!selfie) return false;\n//         setStatus('Validating selfie...');\n//         const formData = new FormData();\n//         formData.append('file', selfie);\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/checkLiveness', formData, { headers });\n//             return response.data.isLive;\n//         } catch (error) {\n//             console.error('Error validating selfie:', error);\n//             setStatus('Selfie validation failed.');\n//             return false;\n//         }\n//     };\n\n//     const matchFace = async () => {\n//         const formData = new FormData();\n//         formData.append('selfie', selfie);\n//         formData.append('idCard', idCard);\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/matchFace', formData, { headers });\n//             return response.data.isMatch;\n//         } catch (error) {\n//             console.error('Error matching face:', error);\n//             setStatus('Face match failed.');\n//             return false;\n//         }\n//     };\n\n//     const handleSubmitDL = async () => {\n//         setStatusMessage('Validating Driver License...');\n//         const isDLValid = await validateDL();\n\n//         if (isDLValid) {\n//             setStep(3);\n//             setStatusMessage(`Driver's License is valid.`);\n//         } else {\n//             setStatusMessage(`Validation failed`);\n//         }\n//     };\n//     const handleSubmitID = async () => {\n//         setStatusMessage('Validating ID Card...');\n//         const isIDValid = await validateIDCard();\n    \n//         if (isIDValid) {\n//             setStep(4); // Proceed to next step after successful ID validation\n//         } else {\n//             setStatusMessage('ID Card validation faileddd.');\n//         }\n//     };\n    \n    \n    \n\n//     const handleSubmitSelfie = async () => {\n//         setStatusMessage('Validating selfie...');\n//         const isSelfieValid = await validateSelfie();\n//         const isFaceMatch = await matchFace();\n//         if (isSelfieValid && isFaceMatch) {\n//             setStatusMessage('KYC process completed successfully.');\n//             setStep(5);\n//         } else {\n//             setStatusMessage('Selfie verification or face match failed.');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Driver KYC Process</h2>\n\n//             {step === 1 && (\n//                 <div>\n//                     <h3>Step 1: Basic Information</h3>\n//                     <input \n//                         type=\"text\" \n//                         placeholder=\"Name\" \n//                         onChange={(e) => setDriverInfo({ ...driverInfo, name: e.target.value })} \n//                     />\n//                     <input \n//                         type=\"text\" \n//                         placeholder=\"Phone\" \n//                         value={driverInfo.phone} \n//                         onChange={(e) => e.target.value.length <= 13 && setDriverInfo({ ...driverInfo, phone: e.target.value })} \n//                     />\n//                     <input \n//                         type=\"email\" \n//                         placeholder=\"Email\" \n//                         value={driverInfo.email} \n//                         onChange={(e) => setDriverInfo({ ...driverInfo, email: e.target.value })} \n//                     />\n//                     <button onClick={() => setStep(2)}>Next</button>\n//                 </div>\n//             )}\n\n//             {step === 2 && (\n//                 <div>\n//                     <h3>Step 2: Upload Driver's License</h3>\n//                     <input \n//                         type=\"file\" \n//                         accept=\".jpg,.png,.pdf\" \n//                         onChange={(e) => handleFileUpload(e, setDriverLicense)} \n//                     />\n//                     <button onClick={handleSubmitDL}>Submit</button>\n//                 </div>\n//             )}\n\n//             {step === 3 && (\n//                 <div>\n//                     <h3>Step 3: Upload ID Card</h3>\n//                     <label>Select ID Type:</label>\n//                     <select value={idType} onChange={(e) => setIdType(e.target.value)}>\n//                         <option value=\"\">--Select--</option>\n//                         <option value=\"aadhaar\">Aadhaar</option>\n//                         <option value=\"passport\">Passport</option>\n//                         <option value=\"pan\">PAN</option>\n//                     </select>\n//                     <input \n//                         type=\"file\" \n//                         accept=\".jpg,.png,.pdf\" \n//                         onChange={(e) => handleFileUpload(e, setIdCard)} \n//                     />\n//                     <button onClick={handleSubmitID}>Submit</button>\n//                 </div>\n//             )}\n\n//             {step === 4 && (\n//                 <div>\n//                     <h3>Step 4: Upload Selfie</h3>\n//                     <input \n//                         type=\"file\" \n//                         accept=\".jpg,.png\" \n//                         onChange={(e) => handleFileUpload(e, setSelfie)} \n//                     />\n//                     <button onClick={handleSubmitSelfie}>Submit</button>\n//                 </div>\n//             )}\n\n//             <p>{statusMessage}</p>\n//         </div>\n//     );\n// }\n\n// export default KYCProcess;\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction KYCProcess() {\n    const [step, setStep] = useState(1);\n    const [driverInfo, setDriverInfo] = useState({ name: '', phone: '+91', email: 'hello@mail.com' });\n    const [driverLicense, setDriverLicense] = useState(null);\n    const [idCard, setIdCard] = useState(null);\n    const [selfie, setSelfie] = useState(null);\n    const [statusMessage, setStatusMessage] = useState('');\n    const [dateOfExpiry, setDateOfExpiry] = useState('');\n    const [idType, setIdType] = useState('');\n    const [status, setStatus] = useState('');\n\n    const headers = {\n        appId: 'yvdxyy',\n        appKey: '9epukpvlpl1asl3bym4j',\n        transactionId: 'driverkyc'\n    };\n\n    const handleFileUpload = (e, setFile) => {\n        const file = e.target.files[0];\n        if (file && ['image/jpeg', 'image/png', 'application/pdf'].includes(file.type)) {\n            setFile(file);\n        } else {\n            alert('Invalid file type. Please upload JPG, PNG, or PDF.');\n        }\n    };\n\n    const validateDL = async () => {\n        setStatus('Validating Driver License...');\n        const formData = new FormData();\n        formData.append('image', driverLicense);\n        formData.append('countryId', 'ind');\n        formData.append('documentId', 'dl');\n        formData.append('expectedDocumentSide', 'front');\n\n        try {\n            const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, { headers });\n            const details = response.data?.result?.details?.[0]?.fieldsExtracted;\n\n            if (details?.dateOfExpiry?.value) {\n                const expiryDate = details.dateOfExpiry.value;\n                setDateOfExpiry(expiryDate);\n                const expiryDateObj = new Date(expiryDate.split('-').reverse().join('-'));\n                if (expiryDateObj > new Date()) {\n                    setStatus('Driver License validated successfully!');\n                    return true;\n                } else {\n                    setStatus('Driver License is expired.');\n                    return false;\n                }\n            } else {\n                setStatus('Unable to fetch Driver License details.');\n                return false;\n            }\n        } catch (error) {\n            console.error('Error validating Driver License:', error);\n            setStatus('Validation failed.');\n            return false;\n        }\n    };\n\n  \n    const validateSelfie = async () => {\n        if (!selfie) return false;\n        setStatus('Validating selfie...');\n        const formData = new FormData();\n        formData.append('file', selfie);\n\n        try {\n            const response = await axios.post('https://ind.idv.hyperverge.co/v1/checkLiveness', formData, { headers });\n            return response.data.isLive;\n        } catch (error) {\n            console.error('Error validating selfie:', error);\n            setStatus('Selfie validation failed.');\n            return false;\n        }\n    };\n\n    const matchFace = async () => {\n        const formData = new FormData();\n        formData.append('selfie', selfie);\n        formData.append('idCard', idCard);\n\n        try {\n            const response = await axios.post('https://ind.idv.hyperverge.co/v1/matchFace', formData, { headers });\n            return response.data.isMatch;\n        } catch (error) {\n            console.error('Error matching face:', error);\n            setStatus('Face match failed.');\n            return false;\n        }\n    };\n\n    const handleSubmitDL = async () => {\n        setStatusMessage('Validating Driver License...');\n        const isDLValid = await validateDL();\n\n        if (isDLValid) {\n            setStep(3);\n            setStatusMessage(`Driver's License is valid.`);\n        } else {\n            setStatusMessage(`Validation failed`);\n        }\n    };\n\n    const handleSubmitID = async () => {\n        setStatusMessage('Validating ID Card...');\n        const isIDValid = await validateIDCard();\n    \n        if (isIDValid) {\n            setStep(4); \n        } else {\n            setStatusMessage('ID Card validation failed.');\n        }\n    };\n\n    const handleSubmitSelfie = async () => {\n        setStatusMessage('Validating selfie...');\n        const isSelfieValid = await validateSelfie();\n        const isFaceMatch = await matchFace();\n        if (isSelfieValid && isFaceMatch) {\n            setStatusMessage('KYC process completed successfully.');\n            setStep(5);\n        } else {\n            setStatusMessage('Selfie verification or face match failed.');\n        }\n    };\n\n    return (\n        <div>\n            <h2>Driver KYC Process</h2>\n\n            {step === 1 && (\n                <div>\n                    <h3>Step 1: Basic Information</h3>\n                    <input \n                        type=\"text\" \n                        placeholder=\"Name\" \n                        onChange={(e) => setDriverInfo({ ...driverInfo, name: e.target.value })} \n                    />\n                    <input \n                        type=\"text\" \n                        placeholder=\"Phone\" \n                        value={driverInfo.phone} \n                        onChange={(e) => e.target.value.length <= 13 && setDriverInfo({ ...driverInfo, phone: e.target.value })} \n                    />\n                    <input \n                        type=\"email\" \n                        placeholder=\"Email\" \n                        value={driverInfo.email} \n                        onChange={(e) => setDriverInfo({ ...driverInfo, email: e.target.value })} \n                    />\n                    <button onClick={() => setStep(2)}>Next</button>\n                </div>\n            )}\n\n            {step === 2 && (\n                <div>\n                    <h3>Step 2: Upload Driver's License</h3>\n                    <input \n                        type=\"file\" \n                        accept=\".jpg,.png,.pdf\" \n                        onChange={(e) => handleFileUpload(e, setDriverLicense)} \n                    />\n                    <button onClick={handleSubmitDL}>Submit</button>\n                </div>\n            )}\n\n            {step === 3 && (\n                <div>\n                    <h3>Step 3: Upload ID Card</h3>\n                    <label>Select ID Type:</label>\n                    <select value={idType} onChange={(e) => setIdType(e.target.value)}>\n                        <option value=\"\">--Select--</option>\n                        <option value=\"aadhaar\">Aadhaar</option>\n                        <option value=\"passport\">Passport</option>\n                        <option value=\"pan\">PAN</option>\n                    </select>\n                    <input \n                        type=\"file\" \n                        accept=\".jpg,.png,.pdf\" \n                        onChange={(e) => handleFileUpload(e, setIdCard)} \n                    />\n                    <button onClick={handleSubmitID}>Submit</button>\n                </div>\n            )}\n\n            {step === 4 && (\n                <div>\n                    <h3>Step 4: Upload Selfie</h3>\n                    <input \n                        type=\"file\" \n                        accept=\".jpg,.png\" \n                        onChange={(e) => handleFileUpload(e, setSelfie)} \n                    />\n                    <button onClick={handleSubmitSelfie}>Submit</button>\n                </div>\n            )}\n\n            <p>{statusMessage}</p>\n        </div>\n    );\n}\n\nexport default KYCProcess;\n\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}