{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Week-0/MERN-main/frontend/src/components/DriverKYC.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function KYCProcess() {\n//     const [step, setStep] = useState(1);\n//     const [driverInfo, setDriverInfo] = useState({ name: '', phone: '+91', email: 'hello@mail.com' });\n//     const [driverLicense, setDriverLicense] = useState(null);\n//     const [idCard, setIdCard] = useState(null);\n//     const [selfie, setSelfie] = useState(null);\n//     const [statusMessage, setStatusMessage] = useState('');\n//     const [dateOfExpiry, setDateOfExpiry] = useState('');\n//     const [idType, setIdType] = useState('');  // Added this line to define idType state\n//     const acceptedIdTypes = ['aadhaar', 'passport', 'pan'];\n//     const [status, setStatus] = useState('');\n\n//     const headers = {\n//         appId: 'yvdxyy',\n//         appKey: '9epukpvlpl1asl3bym4j',\n//         transactionId: 'driverkyc'\n//     };\n\n//     const handleFileUpload = (e, setFile) => {\n//         const file = e.target.files[0];\n//         if (file && ['image/jpeg', 'image/png', 'application/pdf'].includes(file.type)) {\n//             setFile(file);\n//         } else {\n//             alert('Invalid file type. Please upload JPG, PNG, or PDF.');\n//         }\n//     };\n\n//     const validateDL = async () => {\n//         setStatus('Validating Driver License...');\n//         const formData = new FormData();\n//         formData.append('image', driverLicense);\n//         formData.append('countryId', 'ind');\n//         formData.append('documentId', 'dl');\n//         formData.append('expectedDocumentSide', 'front');\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, { headers });\n//             console.log('API Response:', response.data);\n\n//             const details = response.data?.result?.details?.[0]?.fieldsExtracted;\n\n//             if (details?.dateOfExpiry?.value) {\n//                 const expiryDate = details.dateOfExpiry.value;\n//                 setDateOfExpiry(expiryDate);\n\n//                 const expiryDateObj = new Date(expiryDate.split('-').reverse().join('-'));\n//                 if (expiryDateObj > new Date()) {\n//                     setStatus('Driver License validated successfully!');\n//                     return true;\n//                 } else {\n//                     setStatus('Driver License is expired.');\n//                     return false;\n//                 }\n//             } else {\n//                 setStatus('Unable to fetch Driver License details.');\n//                 return false;\n//             }\n//         } catch (error) {\n//             console.error('Error validating Driver License:', error);\n//             setStatus('Validation failed.');\n//             return false;\n//         }\n//     };\n\n//     const validateIDCard = async () => {\n//         if (!idCard || !idType) {\n//             setStatus('Please provide both ID card and select a valid ID type.');\n//             return false;\n//         }\n\n//         setStatus('Validating ID Card...');\n//         const formData = new FormData();\n//         formData.append('file', idCard);\n//         formData.append('countryId', 'ind'); // Ensure the countryId is correct\n\n//         // Map selected ID type to the corresponding document ID\n//         const documentIdMap = {\n//             aadhaar: 'id',       // Aadhaar is 'id' in the document API\n//             pan: 'pan',          // PAN is 'pan'\n//             passport: 'passport', // Passport is 'passport'\n//         };\n\n//         const documentId = documentIdMap[idType.toLowerCase()]; // Get document ID from the map\n\n//         if (!documentId) {\n//             setStatus('Please select a valid ID type.');\n//             return false;\n//         }\n\n//         formData.append('documentId', documentId); // Use mapped documentId\n//         formData.append('expectedDocumentSide', 'front');\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, { headers });\n//             console.log('API Response:', response.data);\n\n//             const details = response.data?.result?.details?.[0]?.fieldsExtracted;\n\n//             if (details) {\n//                 // Check if the important fields (fullName, dateOfBirth, idNumber) are extracted\n//                 const { fullName, dateOfBirth, idNumber } = details;\n\n//                 if (fullName && dateOfBirth && idNumber) {\n//                     setStatus(`${idType.charAt(0).toUpperCase() + idType.slice(1)} validated successfully!`);\n//                     setStep(4); // Move to next step after ID validation\n//                     return true;\n//                 } else {\n//                     setStatus('Missing important details in the ID card.');\n//                     return false;\n//                 }\n//             } else {\n//                 setStatus('Unable to fetch ID card details.');\n//                 return false;\n//             }\n//         } catch (error) {\n//             console.error('Error validating ID Card:', error);\n//             setStatus('Validation failed.');\n//             return false;\n//         }\n//     };\n\n//         const validateSelfie = async () => {\n//         if (!selfie) return false;\n//         setStatus('Validating selfie...');\n//         const formData = new FormData();\n//         formData.append('file', selfie);\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/checkLiveness', formData, { headers });\n//             return response.data.isLive;\n//         } catch (error) {\n//             console.error('Error validating selfie:', error);\n//             setStatus('Selfie validation failed.');\n//             return false;\n//         }\n//     };\n\n//     const matchFace = async () => {\n//         const formData = new FormData();\n//         formData.append('selfie', selfie);\n//         formData.append('idCard', idCard);\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/matchFace', formData, { headers });\n//             return response.data.isMatch;\n//         } catch (error) {\n//             console.error('Error matching face:', error);\n//             setStatus('Face match failed.');\n//             return false;\n//         }\n//     };\n\n//     const handleSubmitDL = async () => {\n//         setStatusMessage('Validating Driver License...');\n//         const isDLValid = await validateDL();\n\n//         if (isDLValid) {\n//             setStep(3);\n//             setStatusMessage(`Driver's License is valid.`);\n//         } else {\n//             setStatusMessage(`Validation failed`);\n//         }\n//     };\n//     const handleSubmitID = async () => {\n//         setStatusMessage('Validating ID Card...');\n//         const isIDValid = await validateIDCard();\n\n//         if (isIDValid) {\n//             setStep(4); // Proceed to next step after successful ID validation\n//         } else {\n//             setStatusMessage('ID Card validation faileddd.');\n//         }\n//     };\n\n//     const handleSubmitSelfie = async () => {\n//         setStatusMessage('Validating selfie...');\n//         const isSelfieValid = await validateSelfie();\n//         const isFaceMatch = await matchFace();\n//         if (isSelfieValid && isFaceMatch) {\n//             setStatusMessage('KYC process completed successfully.');\n//             setStep(5);\n//         } else {\n//             setStatusMessage('Selfie verification or face match failed.');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Driver KYC Process</h2>\n\n//             {step === 1 && (\n//                 <div>\n//                     <h3>Step 1: Basic Information</h3>\n//                     <input \n//                         type=\"text\" \n//                         placeholder=\"Name\" \n//                         onChange={(e) => setDriverInfo({ ...driverInfo, name: e.target.value })} \n//                     />\n//                     <input \n//                         type=\"text\" \n//                         placeholder=\"Phone\" \n//                         value={driverInfo.phone} \n//                         onChange={(e) => e.target.value.length <= 13 && setDriverInfo({ ...driverInfo, phone: e.target.value })} \n//                     />\n//                     <input \n//                         type=\"email\" \n//                         placeholder=\"Email\" \n//                         value={driverInfo.email} \n//                         onChange={(e) => setDriverInfo({ ...driverInfo, email: e.target.value })} \n//                     />\n//                     <button onClick={() => setStep(2)}>Next</button>\n//                 </div>\n//             )}\n\n//             {step === 2 && (\n//                 <div>\n//                     <h3>Step 2: Upload Driver's License</h3>\n//                     <input \n//                         type=\"file\" \n//                         accept=\".jpg,.png,.pdf\" \n//                         onChange={(e) => handleFileUpload(e, setDriverLicense)} \n//                     />\n//                     <button onClick={handleSubmitDL}>Submit</button>\n//                 </div>\n//             )}\n\n//             {step === 3 && (\n//                 <div>\n//                     <h3>Step 3: Upload ID Card</h3>\n//                     <label>Select ID Type:</label>\n//                     <select value={idType} onChange={(e) => setIdType(e.target.value)}>\n//                         <option value=\"\">--Select--</option>\n//                         <option value=\"aadhaar\">Aadhaar</option>\n//                         <option value=\"passport\">Passport</option>\n//                         <option value=\"pan\">PAN</option>\n//                     </select>\n//                     <input \n//                         type=\"file\" \n//                         accept=\".jpg,.png,.pdf\" \n//                         onChange={(e) => handleFileUpload(e, setIdCard)} \n//                     />\n//                     <button onClick={handleSubmitID}>Submit</button>\n//                 </div>\n//             )}\n\n//             {step === 4 && (\n//                 <div>\n//                     <h3>Step 4: Upload Selfie</h3>\n//                     <input \n//                         type=\"file\" \n//                         accept=\".jpg,.png\" \n//                         onChange={(e) => handleFileUpload(e, setSelfie)} \n//                     />\n//                     <button onClick={handleSubmitSelfie}>Submit</button>\n//                 </div>\n//             )}\n\n//             <p>{statusMessage}</p>\n//         </div>\n//     );\n// }\n\n// export default KYCProcess;\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DriverKYC = () => {\n  _s();\n  const [driverLicense, setDriverLicense] = useState(null);\n  const [idCard, setIdCard] = useState(null);\n  const [selfie, setSelfie] = useState(null);\n  const [status, setStatus] = useState('');\n  const [step, setStep] = useState(1);\n  const [driverInfo, setDriverInfo] = useState({\n    name: '',\n    phone: '+91',\n    email: 'hello@mail.com'\n  });\n  const [idType, setIdType] = useState(''); // ID Type for ID Card validation\n  const acceptedIdTypes = ['aadhaar', 'passport', 'pan'];\n  const headers = {\n    appId: 'yvdxyy',\n    appKey: '9epukpvlpl1asl3bym4j',\n    transactionId: 'driverkyc'\n  };\n  const handleFileUpload = (e, setFile) => {\n    const file = e.target.files[0];\n    if (file && ['image/jpeg', 'image/png', 'application/pdf'].includes(file.type)) {\n      setFile(file);\n    } else {\n      alert('Invalid file type. Please upload jpg, png, or pdf.');\n    }\n  };\n  const validateDL = async () => {\n    setStatus(\"Validating Driver's License...\");\n    const formData = new FormData();\n    formData.append('image', driverLicense);\n    formData.append('countryId', 'ind');\n    formData.append('documentId', 'dl');\n    formData.append('expectedDocumentSide', 'front');\n    try {\n      var _response$data, _response$data$result, _response$data$result2, _response$data$result3, _details$dateOfExpiry;\n      const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, {\n        headers\n      });\n      console.log('API Response:', response.data); // Log the response to see if it's as expected\n\n      const details = (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$result = _response$data.result) === null || _response$data$result === void 0 ? void 0 : (_response$data$result2 = _response$data$result.details) === null || _response$data$result2 === void 0 ? void 0 : (_response$data$result3 = _response$data$result2[0]) === null || _response$data$result3 === void 0 ? void 0 : _response$data$result3.fieldsExtracted;\n      if (details !== null && details !== void 0 && (_details$dateOfExpiry = details.dateOfExpiry) !== null && _details$dateOfExpiry !== void 0 && _details$dateOfExpiry.value) {\n        const expiryDate = details.dateOfExpiry.value;\n        const expiryDateObj = new Date(expiryDate.split('-').reverse().join('-'));\n        if (expiryDateObj > new Date()) {\n          setStatus(\"Driver's License validated successfully!\");\n          setStep(2);\n        } else {\n          setStatus('Driver License is expired.');\n        }\n      } else {\n        setStatus('Unable to fetch Driver License details.');\n      }\n    } catch (error) {\n      console.error('Error validating Driver License:', error);\n      setStatus('Validation failed.');\n    }\n  };\n  const validateIDCard = async () => {\n    if (!idCard || !idType) {\n      setStatus('Please select a valid ID type and upload the ID card.');\n      return;\n    }\n    setStatus('Validating ID Card...');\n    const formData = new FormData();\n    formData.append('file', idCard);\n    formData.append('countryId', 'ind');\n    const documentIdMap = {\n      aadhaar: 'id',\n      passport: 'passport',\n      pan: 'pan'\n    };\n    const documentId = documentIdMap[idType];\n    formData.append('documentId', documentId);\n    formData.append('expectedDocumentSide', 'front');\n    try {\n      var _response$data2, _response$data2$resul, _response$data2$resul2, _response$data2$resul3;\n      const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, {\n        headers\n      });\n      const details = (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$resul = _response$data2.result) === null || _response$data2$resul === void 0 ? void 0 : (_response$data2$resul2 = _response$data2$resul.details) === null || _response$data2$resul2 === void 0 ? void 0 : (_response$data2$resul3 = _response$data2$resul2[0]) === null || _response$data2$resul3 === void 0 ? void 0 : _response$data2$resul3.fieldsExtracted;\n      if (details) {\n        const {\n          fullName,\n          dateOfBirth,\n          idNumber\n        } = details;\n        if (fullName && dateOfBirth && idNumber) {\n          setStatus(`${idType.charAt(0).toUpperCase() + idType.slice(1)} validated successfully!`);\n          setStep(3);\n        } else {\n          setStatus('Missing important details in the ID card.');\n        }\n      } else {\n        setStatus('Unable to fetch ID card details.');\n      }\n    } catch (error) {\n      console.error('Error validating ID Card:', error);\n      setStatus('Validation failed.');\n    }\n  };\n  const validateSelfie = async () => {\n    setStatus('Validating Selfie...');\n    const formData = new FormData();\n    formData.append('image', selfie);\n    try {\n      var _response$data$result4, _response$data$result5;\n      const response = await axios.post('https://ind.idv.hyperverge.co/v1/checkLiveness', formData, {\n        headers\n      });\n      const liveFace = (_response$data$result4 = response.data.result) === null || _response$data$result4 === void 0 ? void 0 : (_response$data$result5 = _response$data$result4.details) === null || _response$data$result5 === void 0 ? void 0 : _response$data$result5.liveFace;\n      if (liveFace && liveFace.value === 'yes') {\n        setStep(4);\n        setStatus('Selfie validated successfully!');\n      } else {\n        setStatus('Selfie validation failed. The face is not detected as live.');\n      }\n    } catch (error) {\n      console.error('Error validating selfie:', error);\n      setStatus('Validation failed.');\n    }\n  };\n  const matchFace = async () => {\n    setStatus('Matching Face...');\n    const formData = new FormData();\n    formData.append('selfie', selfie);\n    formData.append('id', driverLicense);\n    try {\n      var _response$data$result6, _response$data$result7;\n      const response = await axios.post('https://ind.idv.hyperverge.co/v1/matchFace', formData, {\n        headers\n      });\n      const match = (_response$data$result6 = response.data.result) === null || _response$data$result6 === void 0 ? void 0 : (_response$data$result7 = _response$data$result6.details) === null || _response$data$result7 === void 0 ? void 0 : _response$data$result7.match;\n      if (match && match.value === 'yes') {\n        setStatus('KYC Process Successful! Face match successful.');\n      } else {\n        setStatus('Face match failed.');\n      }\n    } catch (error) {\n      console.error('Error in face match process:', error);\n      setStatus('KYC Failed.');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (step === 1) await validateDL();else if (step === 2) await validateIDCard();else if (step === 3) await validateSelfie();else if (step === 4) await matchFace();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kyc-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Driver KYC Process\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"kyc-form\",\n      children: [step === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kyc-step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Step 1: Basic Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          value: driverInfo.name,\n          onChange: e => setDriverInfo({\n            ...driverInfo,\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Phone\",\n          value: driverInfo.phone,\n          onChange: e => setDriverInfo({\n            ...driverInfo,\n            phone: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: driverInfo.email,\n          onChange: e => setDriverInfo({\n            ...driverInfo,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 11\n      }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kyc-step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Step 2: Upload Driver's License\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".jpg,.png,.pdf\",\n          onChange: e => handleFileUpload(e, setDriverLicense)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Validate Driver's License\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }, this), step === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kyc-step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Step 3: Upload ID Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Select ID Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: idType,\n          onChange: e => setIdType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"--Select--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"aadhaar\",\n            children: \"Aadhaar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"passport\",\n            children: \"Passport\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"pan\",\n            children: \"PAN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".jpg,.png,.pdf\",\n          onChange: e => handleFileUpload(e, setIdCard)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Validate ID Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 11\n      }, this), step === 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kyc-step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Step 4: Upload Selfie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".jpg,.png\",\n          onChange: e => handleFileUpload(e, setSelfie)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Validate Selfie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status-message\",\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 420,\n    columnNumber: 5\n  }, this);\n};\n_s(DriverKYC, \"3Wkg/yz5daRloDIIfx0OBiM6DvI=\");\n_c = DriverKYC;\nexport default DriverKYC;\nvar _c;\n$RefreshReg$(_c, \"DriverKYC\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","DriverKYC","_s","driverLicense","setDriverLicense","idCard","setIdCard","selfie","setSelfie","status","setStatus","step","setStep","driverInfo","setDriverInfo","name","phone","email","idType","setIdType","acceptedIdTypes","headers","appId","appKey","transactionId","handleFileUpload","e","setFile","file","target","files","includes","type","alert","validateDL","formData","FormData","append","_response$data","_response$data$result","_response$data$result2","_response$data$result3","_details$dateOfExpiry","response","post","console","log","data","details","result","fieldsExtracted","dateOfExpiry","value","expiryDate","expiryDateObj","Date","split","reverse","join","error","validateIDCard","documentIdMap","aadhaar","passport","pan","documentId","_response$data2","_response$data2$resul","_response$data2$resul2","_response$data2$resul3","fullName","dateOfBirth","idNumber","charAt","toUpperCase","slice","validateSelfie","_response$data$result4","_response$data$result5","liveFace","matchFace","_response$data$result6","_response$data$result7","match","handleSubmit","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","accept","_c","$RefreshReg$"],"sources":["/home/user/Desktop/Week-0/MERN-main/frontend/src/components/DriverKYC.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function KYCProcess() {\n//     const [step, setStep] = useState(1);\n//     const [driverInfo, setDriverInfo] = useState({ name: '', phone: '+91', email: 'hello@mail.com' });\n//     const [driverLicense, setDriverLicense] = useState(null);\n//     const [idCard, setIdCard] = useState(null);\n//     const [selfie, setSelfie] = useState(null);\n//     const [statusMessage, setStatusMessage] = useState('');\n//     const [dateOfExpiry, setDateOfExpiry] = useState('');\n//     const [idType, setIdType] = useState('');  // Added this line to define idType state\n//     const acceptedIdTypes = ['aadhaar', 'passport', 'pan'];\n//     const [status, setStatus] = useState('');\n\n//     const headers = {\n//         appId: 'yvdxyy',\n//         appKey: '9epukpvlpl1asl3bym4j',\n//         transactionId: 'driverkyc'\n//     };\n\n//     const handleFileUpload = (e, setFile) => {\n//         const file = e.target.files[0];\n//         if (file && ['image/jpeg', 'image/png', 'application/pdf'].includes(file.type)) {\n//             setFile(file);\n//         } else {\n//             alert('Invalid file type. Please upload JPG, PNG, or PDF.');\n//         }\n//     };\n\n//     const validateDL = async () => {\n//         setStatus('Validating Driver License...');\n//         const formData = new FormData();\n//         formData.append('image', driverLicense);\n//         formData.append('countryId', 'ind');\n//         formData.append('documentId', 'dl');\n//         formData.append('expectedDocumentSide', 'front');\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, { headers });\n//             console.log('API Response:', response.data);\n\n//             const details = response.data?.result?.details?.[0]?.fieldsExtracted;\n\n//             if (details?.dateOfExpiry?.value) {\n//                 const expiryDate = details.dateOfExpiry.value;\n//                 setDateOfExpiry(expiryDate);\n\n//                 const expiryDateObj = new Date(expiryDate.split('-').reverse().join('-'));\n//                 if (expiryDateObj > new Date()) {\n//                     setStatus('Driver License validated successfully!');\n//                     return true;\n//                 } else {\n//                     setStatus('Driver License is expired.');\n//                     return false;\n//                 }\n//             } else {\n//                 setStatus('Unable to fetch Driver License details.');\n//                 return false;\n//             }\n//         } catch (error) {\n//             console.error('Error validating Driver License:', error);\n//             setStatus('Validation failed.');\n//             return false;\n//         }\n//     };\n\n//     const validateIDCard = async () => {\n//         if (!idCard || !idType) {\n//             setStatus('Please provide both ID card and select a valid ID type.');\n//             return false;\n//         }\n    \n//         setStatus('Validating ID Card...');\n//         const formData = new FormData();\n//         formData.append('file', idCard);\n//         formData.append('countryId', 'ind'); // Ensure the countryId is correct\n    \n//         // Map selected ID type to the corresponding document ID\n//         const documentIdMap = {\n//             aadhaar: 'id',       // Aadhaar is 'id' in the document API\n//             pan: 'pan',          // PAN is 'pan'\n//             passport: 'passport', // Passport is 'passport'\n//         };\n    \n//         const documentId = documentIdMap[idType.toLowerCase()]; // Get document ID from the map\n    \n//         if (!documentId) {\n//             setStatus('Please select a valid ID type.');\n//             return false;\n//         }\n    \n//         formData.append('documentId', documentId); // Use mapped documentId\n//         formData.append('expectedDocumentSide', 'front');\n    \n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, { headers });\n//             console.log('API Response:', response.data);\n    \n//             const details = response.data?.result?.details?.[0]?.fieldsExtracted;\n    \n//             if (details) {\n//                 // Check if the important fields (fullName, dateOfBirth, idNumber) are extracted\n//                 const { fullName, dateOfBirth, idNumber } = details;\n    \n//                 if (fullName && dateOfBirth && idNumber) {\n//                     setStatus(`${idType.charAt(0).toUpperCase() + idType.slice(1)} validated successfully!`);\n//                     setStep(4); // Move to next step after ID validation\n//                     return true;\n//                 } else {\n//                     setStatus('Missing important details in the ID card.');\n//                     return false;\n//                 }\n//             } else {\n//                 setStatus('Unable to fetch ID card details.');\n//                 return false;\n//             }\n//         } catch (error) {\n//             console.error('Error validating ID Card:', error);\n//             setStatus('Validation failed.');\n//             return false;\n//         }\n//     };\n    \n//         const validateSelfie = async () => {\n//         if (!selfie) return false;\n//         setStatus('Validating selfie...');\n//         const formData = new FormData();\n//         formData.append('file', selfie);\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/checkLiveness', formData, { headers });\n//             return response.data.isLive;\n//         } catch (error) {\n//             console.error('Error validating selfie:', error);\n//             setStatus('Selfie validation failed.');\n//             return false;\n//         }\n//     };\n\n//     const matchFace = async () => {\n//         const formData = new FormData();\n//         formData.append('selfie', selfie);\n//         formData.append('idCard', idCard);\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/matchFace', formData, { headers });\n//             return response.data.isMatch;\n//         } catch (error) {\n//             console.error('Error matching face:', error);\n//             setStatus('Face match failed.');\n//             return false;\n//         }\n//     };\n\n//     const handleSubmitDL = async () => {\n//         setStatusMessage('Validating Driver License...');\n//         const isDLValid = await validateDL();\n\n//         if (isDLValid) {\n//             setStep(3);\n//             setStatusMessage(`Driver's License is valid.`);\n//         } else {\n//             setStatusMessage(`Validation failed`);\n//         }\n//     };\n//     const handleSubmitID = async () => {\n//         setStatusMessage('Validating ID Card...');\n//         const isIDValid = await validateIDCard();\n    \n//         if (isIDValid) {\n//             setStep(4); // Proceed to next step after successful ID validation\n//         } else {\n//             setStatusMessage('ID Card validation faileddd.');\n//         }\n//     };\n    \n    \n    \n\n//     const handleSubmitSelfie = async () => {\n//         setStatusMessage('Validating selfie...');\n//         const isSelfieValid = await validateSelfie();\n//         const isFaceMatch = await matchFace();\n//         if (isSelfieValid && isFaceMatch) {\n//             setStatusMessage('KYC process completed successfully.');\n//             setStep(5);\n//         } else {\n//             setStatusMessage('Selfie verification or face match failed.');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Driver KYC Process</h2>\n\n//             {step === 1 && (\n//                 <div>\n//                     <h3>Step 1: Basic Information</h3>\n//                     <input \n//                         type=\"text\" \n//                         placeholder=\"Name\" \n//                         onChange={(e) => setDriverInfo({ ...driverInfo, name: e.target.value })} \n//                     />\n//                     <input \n//                         type=\"text\" \n//                         placeholder=\"Phone\" \n//                         value={driverInfo.phone} \n//                         onChange={(e) => e.target.value.length <= 13 && setDriverInfo({ ...driverInfo, phone: e.target.value })} \n//                     />\n//                     <input \n//                         type=\"email\" \n//                         placeholder=\"Email\" \n//                         value={driverInfo.email} \n//                         onChange={(e) => setDriverInfo({ ...driverInfo, email: e.target.value })} \n//                     />\n//                     <button onClick={() => setStep(2)}>Next</button>\n//                 </div>\n//             )}\n\n//             {step === 2 && (\n//                 <div>\n//                     <h3>Step 2: Upload Driver's License</h3>\n//                     <input \n//                         type=\"file\" \n//                         accept=\".jpg,.png,.pdf\" \n//                         onChange={(e) => handleFileUpload(e, setDriverLicense)} \n//                     />\n//                     <button onClick={handleSubmitDL}>Submit</button>\n//                 </div>\n//             )}\n\n//             {step === 3 && (\n//                 <div>\n//                     <h3>Step 3: Upload ID Card</h3>\n//                     <label>Select ID Type:</label>\n//                     <select value={idType} onChange={(e) => setIdType(e.target.value)}>\n//                         <option value=\"\">--Select--</option>\n//                         <option value=\"aadhaar\">Aadhaar</option>\n//                         <option value=\"passport\">Passport</option>\n//                         <option value=\"pan\">PAN</option>\n//                     </select>\n//                     <input \n//                         type=\"file\" \n//                         accept=\".jpg,.png,.pdf\" \n//                         onChange={(e) => handleFileUpload(e, setIdCard)} \n//                     />\n//                     <button onClick={handleSubmitID}>Submit</button>\n//                 </div>\n//             )}\n\n//             {step === 4 && (\n//                 <div>\n//                     <h3>Step 4: Upload Selfie</h3>\n//                     <input \n//                         type=\"file\" \n//                         accept=\".jpg,.png\" \n//                         onChange={(e) => handleFileUpload(e, setSelfie)} \n//                     />\n//                     <button onClick={handleSubmitSelfie}>Submit</button>\n//                 </div>\n//             )}\n\n//             <p>{statusMessage}</p>\n//         </div>\n//     );\n// }\n\n// export default KYCProcess;\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst DriverKYC = () => {\n  const [driverLicense, setDriverLicense] = useState(null);\n  const [idCard, setIdCard] = useState(null);\n  const [selfie, setSelfie] = useState(null);\n  const [status, setStatus] = useState('');\n  const [step, setStep] = useState(1);\n  const [driverInfo, setDriverInfo] = useState({ name: '', phone: '+91', email: 'hello@mail.com' });\n  const [idType, setIdType] = useState('');  // ID Type for ID Card validation\n  const acceptedIdTypes = ['aadhaar', 'passport', 'pan'];\n\n  const headers = {\n    appId: 'yvdxyy',\n    appKey: '9epukpvlpl1asl3bym4j',\n    transactionId: 'driverkyc'\n      };\n\n  const handleFileUpload = (e, setFile) => {\n    const file = e.target.files[0];\n    if (file && ['image/jpeg', 'image/png', 'application/pdf'].includes(file.type)) {\n      setFile(file);\n    } else {\n      alert('Invalid file type. Please upload jpg, png, or pdf.');\n    }\n  };\n\n  const validateDL = async () => {\n    setStatus(\"Validating Driver's License...\");\n    const formData = new FormData();\n    formData.append('image', driverLicense);\n    formData.append('countryId', 'ind');\n    formData.append('documentId', 'dl');\n    formData.append('expectedDocumentSide', 'front');\n  \n    try {\n      const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, { headers });\n      console.log('API Response:', response.data);  // Log the response to see if it's as expected\n  \n      const details = response.data?.result?.details?.[0]?.fieldsExtracted;\n      if (details?.dateOfExpiry?.value) {\n        const expiryDate = details.dateOfExpiry.value;\n        const expiryDateObj = new Date(expiryDate.split('-').reverse().join('-'));\n        if (expiryDateObj > new Date()) {\n          setStatus(\"Driver's License validated successfully!\");\n          setStep(2);\n        } else {\n          setStatus('Driver License is expired.');\n        }\n      } else {\n        setStatus('Unable to fetch Driver License details.');\n      }\n    } catch (error) {\n      console.error('Error validating Driver License:', error);\n      setStatus('Validation failed.');\n    }\n  };\n  \n\n  const validateIDCard = async () => {\n    if (!idCard || !idType) {\n      setStatus('Please select a valid ID type and upload the ID card.');\n      return;\n    }\n\n    setStatus('Validating ID Card...');\n    const formData = new FormData();\n    formData.append('file', idCard);\n    formData.append('countryId', 'ind');\n\n    const documentIdMap = {\n      aadhaar: 'id', \n      passport: 'passport',\n      pan: 'pan',\n    };\n\n    const documentId = documentIdMap[idType];\n    formData.append('documentId', documentId);\n    formData.append('expectedDocumentSide', 'front');\n\n    try {\n      const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, { headers });\n      const details = response.data?.result?.details?.[0]?.fieldsExtracted;\n      if (details) {\n        const { fullName, dateOfBirth, idNumber } = details;\n        if (fullName && dateOfBirth && idNumber) {\n          setStatus(`${idType.charAt(0).toUpperCase() + idType.slice(1)} validated successfully!`);\n          setStep(3);\n        } else {\n          setStatus('Missing important details in the ID card.');\n        }\n      } else {\n        setStatus('Unable to fetch ID card details.');\n      }\n    } catch (error) {\n      console.error('Error validating ID Card:', error);\n      setStatus('Validation failed.');\n    }\n  };\n\n  const validateSelfie = async () => {\n    setStatus('Validating Selfie...');\n    const formData = new FormData();\n    formData.append('image', selfie);\n\n    try {\n      const response = await axios.post('https://ind.idv.hyperverge.co/v1/checkLiveness', formData, { headers });\n      const liveFace = response.data.result?.details?.liveFace;\n      if (liveFace && liveFace.value === 'yes') {\n        setStep(4);\n        setStatus('Selfie validated successfully!');\n      } else {\n        setStatus('Selfie validation failed. The face is not detected as live.');\n      }\n    } catch (error) {\n      console.error('Error validating selfie:', error);\n      setStatus('Validation failed.');\n    }\n  };\n\n  const matchFace = async () => {\n    setStatus('Matching Face...');\n    const formData = new FormData();\n    formData.append('selfie', selfie);\n    formData.append('id', driverLicense);\n\n    try {\n      const response = await axios.post('https://ind.idv.hyperverge.co/v1/matchFace', formData, { headers });\n      const match = response.data.result?.details?.match;\n      if (match && match.value === 'yes') {\n        setStatus('KYC Process Successful! Face match successful.');\n      } else {\n        setStatus('Face match failed.');\n      }\n    } catch (error) {\n      console.error('Error in face match process:', error);\n      setStatus('KYC Failed.');\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (step === 1) await validateDL();\n    else if (step === 2) await validateIDCard();\n    else if (step === 3) await validateSelfie();\n    else if (step === 4) await matchFace();\n  };\n\n  return (\n    <div className=\"kyc-container\">\n      <h1>Driver KYC Process</h1>\n      <form onSubmit={handleSubmit} className=\"kyc-form\">\n        {step === 1 && (\n          <div className=\"kyc-step\">\n            <h3>Step 1: Basic Information</h3>\n            <input \n              type=\"text\" \n              placeholder=\"Name\" \n              value={driverInfo.name} \n              onChange={(e) => setDriverInfo({ ...driverInfo, name: e.target.value })} \n            />\n            <input \n              type=\"text\" \n              placeholder=\"Phone\" \n              value={driverInfo.phone} \n              onChange={(e) => setDriverInfo({ ...driverInfo, phone: e.target.value })} \n            />\n            <input \n              type=\"email\" \n              placeholder=\"Email\" \n              value={driverInfo.email} \n              onChange={(e) => setDriverInfo({ ...driverInfo, email: e.target.value })} \n            />\n            <button type=\"submit\">Next</button>\n          </div>\n        )}\n        {step === 2 && (\n          <div className=\"kyc-step\">\n            <h3>Step 2: Upload Driver's License</h3>\n            <input \n              type=\"file\" \n              accept=\".jpg,.png,.pdf\" \n              onChange={(e) => handleFileUpload(e, setDriverLicense)} \n            />\n            <button type=\"submit\">Validate Driver's License</button>\n          </div>\n        )}\n        {step === 3 && (\n          <div className=\"kyc-step\">\n            <h3>Step 3: Upload ID Card</h3>\n            <label>Select ID Type:</label>\n            <select value={idType} onChange={(e) => setIdType(e.target.value)}>\n              <option value=\"\">--Select--</option>\n              <option value=\"aadhaar\">Aadhaar</option>\n              <option value=\"passport\">Passport</option>\n              <option value=\"pan\">PAN</option>\n            </select>\n            <input \n              type=\"file\" \n              accept=\".jpg,.png,.pdf\" \n              onChange={(e) => handleFileUpload(e, setIdCard)} \n            />\n            <button type=\"submit\">Validate ID Card</button>\n          </div>\n        )}\n        {step === 4 && (\n          <div className=\"kyc-step\">\n            <h3>Step 4: Upload Selfie</h3>\n            <input \n              type=\"file\" \n              accept=\".jpg,.png\" \n              onChange={(e) => handleFileUpload(e, setSelfie)} \n            />\n            <button type=\"submit\">Validate Selfie</button>\n          </div>\n        )}\n      </form>\n      <p className=\"status-message\">Status: {status}</p>\n    </div>\n  );\n};\n\nexport default DriverKYC;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}