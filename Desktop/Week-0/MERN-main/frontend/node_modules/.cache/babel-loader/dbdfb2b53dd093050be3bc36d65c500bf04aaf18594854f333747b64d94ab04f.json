{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Week-0/MERN-main/frontend/src/components/DriverKYC.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction KYCProcess() {\n  _s();\n  const [step, setStep] = useState(1);\n  const [driverInfo, setDriverInfo] = useState({\n    name: '',\n    phone: '+91',\n    email: 'hello@mail.com'\n  });\n  const [driverLicense, setDriverLicense] = useState(null);\n  const [idCard, setIdCard] = useState(null);\n  const [selfie, setSelfie] = useState(null);\n  const [statusMessage, setStatusMessage] = useState('');\n  const [dateOfExpiry, setDateOfExpiry] = useState('');\n  const [idType, setIdType] = useState(''); // Added this line to define idType state\n  const acceptedIdTypes = ['aadhaar', 'passport', 'pan'];\n  const [status, setStatus] = useState('');\n  const headers = {\n    appId: 'yvdxyy',\n    appKey: '9epukpvlpl1asl3bym4j',\n    transactionId: 'driverkyc'\n  };\n  const handleFileUpload = (e, setFile) => {\n    const file = e.target.files[0];\n    if (file && ['image/jpeg', 'image/png', 'application/pdf'].includes(file.type)) {\n      setFile(file);\n    } else {\n      alert('Invalid file type. Please upload JPG, PNG, or PDF.');\n    }\n  };\n  const validateDL = async () => {\n    setStatus('Validating Driver License...');\n    const formData = new FormData();\n    formData.append('image', driverLicense);\n    formData.append('countryId', 'ind');\n    formData.append('documentId', 'dl');\n    formData.append('expectedDocumentSide', 'front');\n    try {\n      var _response$data, _response$data$result, _response$data$result2, _response$data$result3, _details$dateOfExpiry;\n      const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, {\n        headers\n      });\n      console.log('API Response:', response.data);\n      const details = (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$result = _response$data.result) === null || _response$data$result === void 0 ? void 0 : (_response$data$result2 = _response$data$result.details) === null || _response$data$result2 === void 0 ? void 0 : (_response$data$result3 = _response$data$result2[0]) === null || _response$data$result3 === void 0 ? void 0 : _response$data$result3.fieldsExtracted;\n      if (details !== null && details !== void 0 && (_details$dateOfExpiry = details.dateOfExpiry) !== null && _details$dateOfExpiry !== void 0 && _details$dateOfExpiry.value) {\n        const expiryDate = details.dateOfExpiry.value;\n        setDateOfExpiry(expiryDate);\n        const expiryDateObj = new Date(expiryDate.split('-').reverse().join('-'));\n        if (expiryDateObj > new Date()) {\n          setStatus('Driver License validated successfully!');\n          return true;\n        } else {\n          setStatus('Driver License is expired.');\n          return false;\n        }\n      } else {\n        setStatus('Unable to fetch Driver License details.');\n        return false;\n      }\n    } catch (error) {\n      console.error('Error validating Driver License:', error);\n      setStatus('Validation failed.');\n      return false;\n    }\n  };\n  const validateIDCard = async () => {\n    if (!idCard || !idType) {\n      setStatus('Please provide both ID card and select a valid ID type.');\n      return false;\n    }\n    setStatus('Validating ID Card...');\n    const formData = new FormData();\n    formData.append('file', idCard);\n    formData.append('countryId', 'ind'); // Ensure the countryId is correct\n\n    // Map selected ID type to the corresponding document ID\n    const documentIdMap = {\n      aadhaar: 'id',\n      // Aadhaar is 'id' in the document API\n      pan: 'pan',\n      // PAN is 'pan'\n      passport: 'passport' // Passport is 'passport'\n    };\n    const documentId = documentIdMap[idType.toLowerCase()]; // Get document ID from the map\n\n    if (!documentId) {\n      setStatus('Please select a valid ID type.');\n      return false;\n    }\n    formData.append('documentId', documentId); // Use mapped documentId\n    formData.append('expectedDocumentSide', 'front');\n    try {\n      var _response$data2, _response$data2$resul, _response$data2$resul2, _response$data2$resul3;\n      const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, {\n        headers\n      });\n      console.log('API Response:', response.data);\n      const details = (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$resul = _response$data2.result) === null || _response$data2$resul === void 0 ? void 0 : (_response$data2$resul2 = _response$data2$resul.details) === null || _response$data2$resul2 === void 0 ? void 0 : (_response$data2$resul3 = _response$data2$resul2[0]) === null || _response$data2$resul3 === void 0 ? void 0 : _response$data2$resul3.fieldsExtracted;\n      if (details) {\n        // Check if the important fields (fullName, dateOfBirth, idNumber) are extracted\n        const {\n          fullName,\n          dateOfBirth,\n          idNumber\n        } = details;\n        if (fullName && dateOfBirth && idNumber) {\n          setStatus(`${idType.charAt(0).toUpperCase() + idType.slice(1)} validated successfully!`);\n          setStep(4); // Move to next step after ID validation\n          return true;\n        } else {\n          setStatus('Missing important details in the ID card.');\n          return false;\n        }\n      } else {\n        setStatus('Unable to fetch ID card details.');\n        return false;\n      }\n    } catch (error) {\n      console.error('Error validating ID Card:', error);\n      setStatus('Validation failed.');\n      return false;\n    }\n  };\n  const validateSelfie = async () => {\n    if (!selfie) return false;\n    setStatus('Validating selfie...');\n    const formData = new FormData();\n    formData.append('file', selfie);\n    try {\n      const response = await axios.post('https://ind.idv.hyperverge.co/v1/checkLiveness', formData, {\n        headers\n      });\n      return response.data.isLive;\n    } catch (error) {\n      console.error('Error validating selfie:', error);\n      setStatus('Selfie validation failed.');\n      return false;\n    }\n  };\n  const matchFace = async () => {\n    const formData = new FormData();\n    formData.append('selfie', selfie);\n    formData.append('idCard', idCard);\n    try {\n      const response = await axios.post('https://ind.idv.hyperverge.co/v1/matchFace', formData, {\n        headers\n      });\n      return response.data.isMatch;\n    } catch (error) {\n      console.error('Error matching face:', error);\n      setStatus('Face match failed.');\n      return false;\n    }\n  };\n  const handleSubmitDL = async () => {\n    setStatusMessage('Validating Driver License...');\n    const isDLValid = await validateDL();\n    if (isDLValid) {\n      setStep(3);\n      setStatusMessage(`Driver's License is valid.`);\n    } else {\n      setStatusMessage(`Validation failed`);\n    }\n  };\n  const handleSubmitID = async () => {\n    setStatusMessage('Validating ID Card...');\n    const isIDValid = await validateIDCard();\n    if (isIDValid) {\n      setStep(4); // Proceed to next step after successful ID validation\n    } else {\n      setStatusMessage('ID Card validation faileddd.');\n    }\n  };\n  const handleSubmitSelfie = async () => {\n    setStatusMessage('Validating selfie...');\n    const isSelfieValid = await validateSelfie();\n    const isFaceMatch = await matchFace();\n    if (isSelfieValid && isFaceMatch) {\n      setStatusMessage('KYC process completed successfully.');\n      setStep(5);\n    } else {\n      setStatusMessage('Selfie verification or face match failed.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Driver KYC Process\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this), step === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Step 1: Basic Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        onChange: e => setDriverInfo({\n          ...driverInfo,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Phone\",\n        value: driverInfo.phone,\n        onChange: e => e.target.value.length <= 13 && setDriverInfo({\n          ...driverInfo,\n          phone: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: driverInfo.email,\n        onChange: e => setDriverInfo({\n          ...driverInfo,\n          email: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setStep(2),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Step 2: Upload Driver's License\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".jpg,.png,.pdf\",\n        onChange: e => handleFileUpload(e, setDriverLicense)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmitDL,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }, this), step === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Step 3: Upload ID Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select ID Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: idType,\n        onChange: e => setIdType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Select--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"aadhaar\",\n          children: \"Aadhaar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"passport\",\n          children: \"Passport\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pan\",\n          children: \"PAN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".jpg,.png,.pdf\",\n        onChange: e => handleFileUpload(e, setIdCard)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmitID,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }, this), step === 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Step 4: Upload Selfie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".jpg,.png\",\n        onChange: e => handleFileUpload(e, setSelfie)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmitSelfie,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 9\n  }, this);\n}\n_s(KYCProcess, \"KcWWPwYz41bpZPHd8k/00GYnx9o=\");\n_c = KYCProcess;\nexport default KYCProcess;\nvar _c;\n$RefreshReg$(_c, \"KYCProcess\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","KYCProcess","_s","step","setStep","driverInfo","setDriverInfo","name","phone","email","driverLicense","setDriverLicense","idCard","setIdCard","selfie","setSelfie","statusMessage","setStatusMessage","dateOfExpiry","setDateOfExpiry","idType","setIdType","acceptedIdTypes","status","setStatus","headers","appId","appKey","transactionId","handleFileUpload","e","setFile","file","target","files","includes","type","alert","validateDL","formData","FormData","append","_response$data","_response$data$result","_response$data$result2","_response$data$result3","_details$dateOfExpiry","response","post","console","log","data","details","result","fieldsExtracted","value","expiryDate","expiryDateObj","Date","split","reverse","join","error","validateIDCard","documentIdMap","aadhaar","pan","passport","documentId","toLowerCase","_response$data2","_response$data2$resul","_response$data2$resul2","_response$data2$resul3","fullName","dateOfBirth","idNumber","charAt","toUpperCase","slice","validateSelfie","isLive","matchFace","isMatch","handleSubmitDL","isDLValid","handleSubmitID","isIDValid","handleSubmitSelfie","isSelfieValid","isFaceMatch","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","length","onClick","accept","_c","$RefreshReg$"],"sources":["/home/user/Desktop/Week-0/MERN-main/frontend/src/components/DriverKYC.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction KYCProcess() {\n    const [step, setStep] = useState(1);\n    const [driverInfo, setDriverInfo] = useState({ name: '', phone: '+91', email: 'hello@mail.com' });\n    const [driverLicense, setDriverLicense] = useState(null);\n    const [idCard, setIdCard] = useState(null);\n    const [selfie, setSelfie] = useState(null);\n    const [statusMessage, setStatusMessage] = useState('');\n    const [dateOfExpiry, setDateOfExpiry] = useState('');\n    const [idType, setIdType] = useState('');  // Added this line to define idType state\n    const acceptedIdTypes = ['aadhaar', 'passport', 'pan'];\n    const [status, setStatus] = useState('');\n\n    const headers = {\n        appId: 'yvdxyy',\n        appKey: '9epukpvlpl1asl3bym4j',\n        transactionId: 'driverkyc'\n    };\n\n    const handleFileUpload = (e, setFile) => {\n        const file = e.target.files[0];\n        if (file && ['image/jpeg', 'image/png', 'application/pdf'].includes(file.type)) {\n            setFile(file);\n        } else {\n            alert('Invalid file type. Please upload JPG, PNG, or PDF.');\n        }\n    };\n\n    const validateDL = async () => {\n        setStatus('Validating Driver License...');\n        const formData = new FormData();\n        formData.append('image', driverLicense);\n        formData.append('countryId', 'ind');\n        formData.append('documentId', 'dl');\n        formData.append('expectedDocumentSide', 'front');\n\n        try {\n            const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, { headers });\n            console.log('API Response:', response.data);\n\n            const details = response.data?.result?.details?.[0]?.fieldsExtracted;\n\n            if (details?.dateOfExpiry?.value) {\n                const expiryDate = details.dateOfExpiry.value;\n                setDateOfExpiry(expiryDate);\n\n                const expiryDateObj = new Date(expiryDate.split('-').reverse().join('-'));\n                if (expiryDateObj > new Date()) {\n                    setStatus('Driver License validated successfully!');\n                    return true;\n                } else {\n                    setStatus('Driver License is expired.');\n                    return false;\n                }\n            } else {\n                setStatus('Unable to fetch Driver License details.');\n                return false;\n            }\n        } catch (error) {\n            console.error('Error validating Driver License:', error);\n            setStatus('Validation failed.');\n            return false;\n        }\n    };\n\n    const validateIDCard = async () => {\n        if (!idCard || !idType) {\n            setStatus('Please provide both ID card and select a valid ID type.');\n            return false;\n        }\n    \n        setStatus('Validating ID Card...');\n        const formData = new FormData();\n        formData.append('file', idCard);\n        formData.append('countryId', 'ind'); // Ensure the countryId is correct\n    \n        // Map selected ID type to the corresponding document ID\n        const documentIdMap = {\n            aadhaar: 'id',       // Aadhaar is 'id' in the document API\n            pan: 'pan',          // PAN is 'pan'\n            passport: 'passport', // Passport is 'passport'\n        };\n    \n        const documentId = documentIdMap[idType.toLowerCase()]; // Get document ID from the map\n    \n        if (!documentId) {\n            setStatus('Please select a valid ID type.');\n            return false;\n        }\n    \n        formData.append('documentId', documentId); // Use mapped documentId\n        formData.append('expectedDocumentSide', 'front');\n    \n        try {\n            const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, { headers });\n            console.log('API Response:', response.data);\n    \n            const details = response.data?.result?.details?.[0]?.fieldsExtracted;\n    \n            if (details) {\n                // Check if the important fields (fullName, dateOfBirth, idNumber) are extracted\n                const { fullName, dateOfBirth, idNumber } = details;\n    \n                if (fullName && dateOfBirth && idNumber) {\n                    setStatus(`${idType.charAt(0).toUpperCase() + idType.slice(1)} validated successfully!`);\n                    setStep(4); // Move to next step after ID validation\n                    return true;\n                } else {\n                    setStatus('Missing important details in the ID card.');\n                    return false;\n                }\n            } else {\n                setStatus('Unable to fetch ID card details.');\n                return false;\n            }\n        } catch (error) {\n            console.error('Error validating ID Card:', error);\n            setStatus('Validation failed.');\n            return false;\n        }\n    };\n    \n        const validateSelfie = async () => {\n        if (!selfie) return false;\n        setStatus('Validating selfie...');\n        const formData = new FormData();\n        formData.append('file', selfie);\n\n        try {\n            const response = await axios.post('https://ind.idv.hyperverge.co/v1/checkLiveness', formData, { headers });\n            return response.data.isLive;\n        } catch (error) {\n            console.error('Error validating selfie:', error);\n            setStatus('Selfie validation failed.');\n            return false;\n        }\n    };\n\n    const matchFace = async () => {\n        const formData = new FormData();\n        formData.append('selfie', selfie);\n        formData.append('idCard', idCard);\n\n        try {\n            const response = await axios.post('https://ind.idv.hyperverge.co/v1/matchFace', formData, { headers });\n            return response.data.isMatch;\n        } catch (error) {\n            console.error('Error matching face:', error);\n            setStatus('Face match failed.');\n            return false;\n        }\n    };\n\n    const handleSubmitDL = async () => {\n        setStatusMessage('Validating Driver License...');\n        const isDLValid = await validateDL();\n\n        if (isDLValid) {\n            setStep(3);\n            setStatusMessage(`Driver's License is valid.`);\n        } else {\n            setStatusMessage(`Validation failed`);\n        }\n    };\n    const handleSubmitID = async () => {\n        setStatusMessage('Validating ID Card...');\n        const isIDValid = await validateIDCard();\n    \n        if (isIDValid) {\n            setStep(4); // Proceed to next step after successful ID validation\n        } else {\n            setStatusMessage('ID Card validation faileddd.');\n        }\n    };\n    \n    \n    \n\n    const handleSubmitSelfie = async () => {\n        setStatusMessage('Validating selfie...');\n        const isSelfieValid = await validateSelfie();\n        const isFaceMatch = await matchFace();\n        if (isSelfieValid && isFaceMatch) {\n            setStatusMessage('KYC process completed successfully.');\n            setStep(5);\n        } else {\n            setStatusMessage('Selfie verification or face match failed.');\n        }\n    };\n\n    return (\n        <div>\n            <h2>Driver KYC Process</h2>\n\n            {step === 1 && (\n                <div>\n                    <h3>Step 1: Basic Information</h3>\n                    <input \n                        type=\"text\" \n                        placeholder=\"Name\" \n                        onChange={(e) => setDriverInfo({ ...driverInfo, name: e.target.value })} \n                    />\n                    <input \n                        type=\"text\" \n                        placeholder=\"Phone\" \n                        value={driverInfo.phone} \n                        onChange={(e) => e.target.value.length <= 13 && setDriverInfo({ ...driverInfo, phone: e.target.value })} \n                    />\n                    <input \n                        type=\"email\" \n                        placeholder=\"Email\" \n                        value={driverInfo.email} \n                        onChange={(e) => setDriverInfo({ ...driverInfo, email: e.target.value })} \n                    />\n                    <button onClick={() => setStep(2)}>Next</button>\n                </div>\n            )}\n\n            {step === 2 && (\n                <div>\n                    <h3>Step 2: Upload Driver's License</h3>\n                    <input \n                        type=\"file\" \n                        accept=\".jpg,.png,.pdf\" \n                        onChange={(e) => handleFileUpload(e, setDriverLicense)} \n                    />\n                    <button onClick={handleSubmitDL}>Submit</button>\n                </div>\n            )}\n\n            {step === 3 && (\n                <div>\n                    <h3>Step 3: Upload ID Card</h3>\n                    <label>Select ID Type:</label>\n                    <select value={idType} onChange={(e) => setIdType(e.target.value)}>\n                        <option value=\"\">--Select--</option>\n                        <option value=\"aadhaar\">Aadhaar</option>\n                        <option value=\"passport\">Passport</option>\n                        <option value=\"pan\">PAN</option>\n                    </select>\n                    <input \n                        type=\"file\" \n                        accept=\".jpg,.png,.pdf\" \n                        onChange={(e) => handleFileUpload(e, setIdCard)} \n                    />\n                    <button onClick={handleSubmitID}>Submit</button>\n                </div>\n            )}\n\n            {step === 4 && (\n                <div>\n                    <h3>Step 4: Upload Selfie</h3>\n                    <input \n                        type=\"file\" \n                        accept=\".jpg,.png\" \n                        onChange={(e) => handleFileUpload(e, setSelfie)} \n                    />\n                    <button onClick={handleSubmitSelfie}>Submit</button>\n                </div>\n            )}\n\n            <p>{statusMessage}</p>\n        </div>\n    );\n}\n\nexport default KYCProcess;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC;IAAEU,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAiB,CAAC,CAAC;EACjG,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACuB,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EAC3C,MAAMyB,eAAe,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC;EACtD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAM4B,OAAO,GAAG;IACZC,KAAK,EAAE,QAAQ;IACfC,MAAM,EAAE,sBAAsB;IAC9BC,aAAa,EAAE;EACnB,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAACC,CAAC,EAAEC,OAAO,KAAK;IACrC,MAAMC,IAAI,GAAGF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAIF,IAAI,IAAI,CAAC,YAAY,EAAE,WAAW,EAAE,iBAAiB,CAAC,CAACG,QAAQ,CAACH,IAAI,CAACI,IAAI,CAAC,EAAE;MAC5EL,OAAO,CAACC,IAAI,CAAC;IACjB,CAAC,MAAM;MACHK,KAAK,CAAC,oDAAoD,CAAC;IAC/D;EACJ,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3Bd,SAAS,CAAC,8BAA8B,CAAC;IACzC,MAAMe,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE/B,aAAa,CAAC;IACvC6B,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAE,KAAK,CAAC;IACnCF,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC;IACnCF,QAAQ,CAACE,MAAM,CAAC,sBAAsB,EAAE,OAAO,CAAC;IAEhD,IAAI;MAAA,IAAAC,cAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,qBAAA;MACA,MAAMC,QAAQ,GAAG,MAAMjD,KAAK,CAACkD,IAAI,CAAC,yCAAyC,EAAET,QAAQ,EAAE;QAAEd;MAAQ,CAAC,CAAC;MACnGwB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,QAAQ,CAACI,IAAI,CAAC;MAE3C,MAAMC,OAAO,IAAAV,cAAA,GAAGK,QAAQ,CAACI,IAAI,cAAAT,cAAA,wBAAAC,qBAAA,GAAbD,cAAA,CAAeW,MAAM,cAAAV,qBAAA,wBAAAC,sBAAA,GAArBD,qBAAA,CAAuBS,OAAO,cAAAR,sBAAA,wBAAAC,sBAAA,GAA9BD,sBAAA,CAAiC,CAAC,CAAC,cAAAC,sBAAA,uBAAnCA,sBAAA,CAAqCS,eAAe;MAEpE,IAAIF,OAAO,aAAPA,OAAO,gBAAAN,qBAAA,GAAPM,OAAO,CAAElC,YAAY,cAAA4B,qBAAA,eAArBA,qBAAA,CAAuBS,KAAK,EAAE;QAC9B,MAAMC,UAAU,GAAGJ,OAAO,CAAClC,YAAY,CAACqC,KAAK;QAC7CpC,eAAe,CAACqC,UAAU,CAAC;QAE3B,MAAMC,aAAa,GAAG,IAAIC,IAAI,CAACF,UAAU,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC;QACzE,IAAIJ,aAAa,GAAG,IAAIC,IAAI,CAAC,CAAC,EAAE;UAC5BlC,SAAS,CAAC,wCAAwC,CAAC;UACnD,OAAO,IAAI;QACf,CAAC,MAAM;UACHA,SAAS,CAAC,4BAA4B,CAAC;UACvC,OAAO,KAAK;QAChB;MACJ,CAAC,MAAM;QACHA,SAAS,CAAC,yCAAyC,CAAC;QACpD,OAAO,KAAK;MAChB;IACJ,CAAC,CAAC,OAAOsC,KAAK,EAAE;MACZb,OAAO,CAACa,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxDtC,SAAS,CAAC,oBAAoB,CAAC;MAC/B,OAAO,KAAK;IAChB;EACJ,CAAC;EAED,MAAMuC,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACnD,MAAM,IAAI,CAACQ,MAAM,EAAE;MACpBI,SAAS,CAAC,yDAAyD,CAAC;MACpE,OAAO,KAAK;IAChB;IAEAA,SAAS,CAAC,uBAAuB,CAAC;IAClC,MAAMe,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE7B,MAAM,CAAC;IAC/B2B,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;;IAErC;IACA,MAAMuB,aAAa,GAAG;MAClBC,OAAO,EAAE,IAAI;MAAQ;MACrBC,GAAG,EAAE,KAAK;MAAW;MACrBC,QAAQ,EAAE,UAAU,CAAE;IAC1B,CAAC;IAED,MAAMC,UAAU,GAAGJ,aAAa,CAAC5C,MAAM,CAACiD,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;;IAExD,IAAI,CAACD,UAAU,EAAE;MACb5C,SAAS,CAAC,gCAAgC,CAAC;MAC3C,OAAO,KAAK;IAChB;IAEAe,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE2B,UAAU,CAAC,CAAC,CAAC;IAC3C7B,QAAQ,CAACE,MAAM,CAAC,sBAAsB,EAAE,OAAO,CAAC;IAEhD,IAAI;MAAA,IAAA6B,eAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;MACA,MAAM1B,QAAQ,GAAG,MAAMjD,KAAK,CAACkD,IAAI,CAAC,yCAAyC,EAAET,QAAQ,EAAE;QAAEd;MAAQ,CAAC,CAAC;MACnGwB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,QAAQ,CAACI,IAAI,CAAC;MAE3C,MAAMC,OAAO,IAAAkB,eAAA,GAAGvB,QAAQ,CAACI,IAAI,cAAAmB,eAAA,wBAAAC,qBAAA,GAAbD,eAAA,CAAejB,MAAM,cAAAkB,qBAAA,wBAAAC,sBAAA,GAArBD,qBAAA,CAAuBnB,OAAO,cAAAoB,sBAAA,wBAAAC,sBAAA,GAA9BD,sBAAA,CAAiC,CAAC,CAAC,cAAAC,sBAAA,uBAAnCA,sBAAA,CAAqCnB,eAAe;MAEpE,IAAIF,OAAO,EAAE;QACT;QACA,MAAM;UAAEsB,QAAQ;UAAEC,WAAW;UAAEC;QAAS,CAAC,GAAGxB,OAAO;QAEnD,IAAIsB,QAAQ,IAAIC,WAAW,IAAIC,QAAQ,EAAE;UACrCpD,SAAS,CAAC,GAAGJ,MAAM,CAACyD,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG1D,MAAM,CAAC2D,KAAK,CAAC,CAAC,CAAC,0BAA0B,CAAC;UACxF3E,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;UACZ,OAAO,IAAI;QACf,CAAC,MAAM;UACHoB,SAAS,CAAC,2CAA2C,CAAC;UACtD,OAAO,KAAK;QAChB;MACJ,CAAC,MAAM;QACHA,SAAS,CAAC,kCAAkC,CAAC;QAC7C,OAAO,KAAK;MAChB;IACJ,CAAC,CAAC,OAAOsC,KAAK,EAAE;MACZb,OAAO,CAACa,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDtC,SAAS,CAAC,oBAAoB,CAAC;MAC/B,OAAO,KAAK;IAChB;EACJ,CAAC;EAEG,MAAMwD,cAAc,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAAClE,MAAM,EAAE,OAAO,KAAK;IACzBU,SAAS,CAAC,sBAAsB,CAAC;IACjC,MAAMe,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE3B,MAAM,CAAC;IAE/B,IAAI;MACA,MAAMiC,QAAQ,GAAG,MAAMjD,KAAK,CAACkD,IAAI,CAAC,gDAAgD,EAAET,QAAQ,EAAE;QAAEd;MAAQ,CAAC,CAAC;MAC1G,OAAOsB,QAAQ,CAACI,IAAI,CAAC8B,MAAM;IAC/B,CAAC,CAAC,OAAOnB,KAAK,EAAE;MACZb,OAAO,CAACa,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDtC,SAAS,CAAC,2BAA2B,CAAC;MACtC,OAAO,KAAK;IAChB;EACJ,CAAC;EAED,MAAM0D,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAM3C,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAE3B,MAAM,CAAC;IACjCyB,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAE7B,MAAM,CAAC;IAEjC,IAAI;MACA,MAAMmC,QAAQ,GAAG,MAAMjD,KAAK,CAACkD,IAAI,CAAC,4CAA4C,EAAET,QAAQ,EAAE;QAAEd;MAAQ,CAAC,CAAC;MACtG,OAAOsB,QAAQ,CAACI,IAAI,CAACgC,OAAO;IAChC,CAAC,CAAC,OAAOrB,KAAK,EAAE;MACZb,OAAO,CAACa,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CtC,SAAS,CAAC,oBAAoB,CAAC;MAC/B,OAAO,KAAK;IAChB;EACJ,CAAC;EAED,MAAM4D,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/BnE,gBAAgB,CAAC,8BAA8B,CAAC;IAChD,MAAMoE,SAAS,GAAG,MAAM/C,UAAU,CAAC,CAAC;IAEpC,IAAI+C,SAAS,EAAE;MACXjF,OAAO,CAAC,CAAC,CAAC;MACVa,gBAAgB,CAAC,4BAA4B,CAAC;IAClD,CAAC,MAAM;MACHA,gBAAgB,CAAC,mBAAmB,CAAC;IACzC;EACJ,CAAC;EACD,MAAMqE,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/BrE,gBAAgB,CAAC,uBAAuB,CAAC;IACzC,MAAMsE,SAAS,GAAG,MAAMxB,cAAc,CAAC,CAAC;IAExC,IAAIwB,SAAS,EAAE;MACXnF,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,MAAM;MACHa,gBAAgB,CAAC,8BAA8B,CAAC;IACpD;EACJ,CAAC;EAKD,MAAMuE,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnCvE,gBAAgB,CAAC,sBAAsB,CAAC;IACxC,MAAMwE,aAAa,GAAG,MAAMT,cAAc,CAAC,CAAC;IAC5C,MAAMU,WAAW,GAAG,MAAMR,SAAS,CAAC,CAAC;IACrC,IAAIO,aAAa,IAAIC,WAAW,EAAE;MAC9BzE,gBAAgB,CAAC,qCAAqC,CAAC;MACvDb,OAAO,CAAC,CAAC,CAAC;IACd,CAAC,MAAM;MACHa,gBAAgB,CAAC,2CAA2C,CAAC;IACjE;EACJ,CAAC;EAED,oBACIjB,OAAA;IAAA2F,QAAA,gBACI3F,OAAA;MAAA2F,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE1B5F,IAAI,KAAK,CAAC,iBACPH,OAAA;MAAA2F,QAAA,gBACI3F,OAAA;QAAA2F,QAAA,EAAI;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClC/F,OAAA;QACIoC,IAAI,EAAC,MAAM;QACX4D,WAAW,EAAC,MAAM;QAClBC,QAAQ,EAAGnE,CAAC,IAAKxB,aAAa,CAAC;UAAE,GAAGD,UAAU;UAAEE,IAAI,EAAEuB,CAAC,CAACG,MAAM,CAACsB;QAAM,CAAC;MAAE;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E,CAAC,eACF/F,OAAA;QACIoC,IAAI,EAAC,MAAM;QACX4D,WAAW,EAAC,OAAO;QACnBzC,KAAK,EAAElD,UAAU,CAACG,KAAM;QACxByF,QAAQ,EAAGnE,CAAC,IAAKA,CAAC,CAACG,MAAM,CAACsB,KAAK,CAAC2C,MAAM,IAAI,EAAE,IAAI5F,aAAa,CAAC;UAAE,GAAGD,UAAU;UAAEG,KAAK,EAAEsB,CAAC,CAACG,MAAM,CAACsB;QAAM,CAAC;MAAE;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3G,CAAC,eACF/F,OAAA;QACIoC,IAAI,EAAC,OAAO;QACZ4D,WAAW,EAAC,OAAO;QACnBzC,KAAK,EAAElD,UAAU,CAACI,KAAM;QACxBwF,QAAQ,EAAGnE,CAAC,IAAKxB,aAAa,CAAC;UAAE,GAAGD,UAAU;UAAEI,KAAK,EAAEqB,CAAC,CAACG,MAAM,CAACsB;QAAM,CAAC;MAAE;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5E,CAAC,eACF/F,OAAA;QAAQmG,OAAO,EAAEA,CAAA,KAAM/F,OAAO,CAAC,CAAC,CAAE;QAAAuF,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CACR,EAEA5F,IAAI,KAAK,CAAC,iBACPH,OAAA;MAAA2F,QAAA,gBACI3F,OAAA;QAAA2F,QAAA,EAAI;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxC/F,OAAA;QACIoC,IAAI,EAAC,MAAM;QACXgE,MAAM,EAAC,gBAAgB;QACvBH,QAAQ,EAAGnE,CAAC,IAAKD,gBAAgB,CAACC,CAAC,EAAEnB,gBAAgB;MAAE;QAAAiF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC,eACF/F,OAAA;QAAQmG,OAAO,EAAEf,cAAe;QAAAO,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CACR,EAEA5F,IAAI,KAAK,CAAC,iBACPH,OAAA;MAAA2F,QAAA,gBACI3F,OAAA;QAAA2F,QAAA,EAAI;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/B/F,OAAA;QAAA2F,QAAA,EAAO;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9B/F,OAAA;QAAQuD,KAAK,EAAEnC,MAAO;QAAC6E,QAAQ,EAAGnE,CAAC,IAAKT,SAAS,CAACS,CAAC,CAACG,MAAM,CAACsB,KAAK,CAAE;QAAAoC,QAAA,gBAC9D3F,OAAA;UAAQuD,KAAK,EAAC,EAAE;UAAAoC,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpC/F,OAAA;UAAQuD,KAAK,EAAC,SAAS;UAAAoC,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxC/F,OAAA;UAAQuD,KAAK,EAAC,UAAU;UAAAoC,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1C/F,OAAA;UAAQuD,KAAK,EAAC,KAAK;UAAAoC,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACT/F,OAAA;QACIoC,IAAI,EAAC,MAAM;QACXgE,MAAM,EAAC,gBAAgB;QACvBH,QAAQ,EAAGnE,CAAC,IAAKD,gBAAgB,CAACC,CAAC,EAAEjB,SAAS;MAAE;QAAA+E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eACF/F,OAAA;QAAQmG,OAAO,EAAEb,cAAe;QAAAK,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CACR,EAEA5F,IAAI,KAAK,CAAC,iBACPH,OAAA;MAAA2F,QAAA,gBACI3F,OAAA;QAAA2F,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9B/F,OAAA;QACIoC,IAAI,EAAC,MAAM;QACXgE,MAAM,EAAC,WAAW;QAClBH,QAAQ,EAAGnE,CAAC,IAAKD,gBAAgB,CAACC,CAAC,EAAEf,SAAS;MAAE;QAAA6E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eACF/F,OAAA;QAAQmG,OAAO,EAAEX,kBAAmB;QAAAG,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CACR,eAED/F,OAAA;MAAA2F,QAAA,EAAI3E;IAAa;MAAA4E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEd;AAAC7F,EAAA,CAvQQD,UAAU;AAAAoG,EAAA,GAAVpG,UAAU;AAyQnB,eAAeA,UAAU;AAAC,IAAAoG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}