{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Week-0/MERN-main/frontend/src/components/DriverKYC.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function KYCProcess() {\n//     const [step, setStep] = useState(1);\n//     const [driverInfo, setDriverInfo] = useState({ name: '', phone: '+91', email: 'hello@mail.com' });\n//     const [driverLicense, setDriverLicense] = useState(null);\n//     const [idCard, setIdCard] = useState(null);\n//     const [selfie, setSelfie] = useState(null);\n//     const [statusMessage, setStatusMessage] = useState('');\n//     const [dateOfExpiry, setDateOfExpiry] = useState('');\n//     const [idType, setIdType] = useState('');  // Added this line to define idType state\n//     const acceptedIdTypes = ['aadhaar', 'passport', 'pan'];\n//     const [status, setStatus] = useState('');\n\n//     const headers = {\n//         appId: 'yvdxyy',\n//         appKey: '9epukpvlpl1asl3bym4j',\n//         transactionId: 'driverkyc'\n//     };\n\n//     const handleFileUpload = (e, setFile) => {\n//         const file = e.target.files[0];\n//         if (file && ['image/jpeg', 'image/png', 'application/pdf'].includes(file.type)) {\n//             setFile(file);\n//         } else {\n//             alert('Invalid file type. Please upload JPG, PNG, or PDF.');\n//         }\n//     };\n\n//     const validateDL = async () => {\n//         setStatus('Validating Driver License...');\n//         const formData = new FormData();\n//         formData.append('image', driverLicense);\n//         formData.append('countryId', 'ind');\n//         formData.append('documentId', 'dl');\n//         formData.append('expectedDocumentSide', 'front');\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, { headers });\n//             console.log('API Response:', response.data);\n\n//             const details = response.data?.result?.details?.[0]?.fieldsExtracted;\n\n//             if (details?.dateOfExpiry?.value) {\n//                 const expiryDate = details.dateOfExpiry.value;\n//                 setDateOfExpiry(expiryDate);\n\n//                 const expiryDateObj = new Date(expiryDate.split('-').reverse().join('-'));\n//                 if (expiryDateObj > new Date()) {\n//                     setStatus('Driver License validated successfully!');\n//                     return true;\n//                 } else {\n//                     setStatus('Driver License is expired.');\n//                     return false;\n//                 }\n//             } else {\n//                 setStatus('Unable to fetch Driver License details.');\n//                 return false;\n//             }\n//         } catch (error) {\n//             console.error('Error validating Driver License:', error);\n//             setStatus('Validation failed.');\n//             return false;\n//         }\n//     };\n\n//     const validateIDCard = async () => {\n//         if (!idCard || !idType) {\n//             setStatus('Please provide both ID card and select a valid ID type.');\n//             return false;\n//         }\n\n//         setStatus('Validating ID Card...');\n//         const formData = new FormData();\n//         formData.append('file', idCard);\n//         formData.append('countryId', 'ind'); // Ensure the countryId is correct\n\n//         // Map selected ID type to the corresponding document ID\n//         const documentIdMap = {\n//             aadhaar: 'id',       // Aadhaar is 'id' in the document API\n//             pan: 'pan',          // PAN is 'pan'\n//             passport: 'passport', // Passport is 'passport'\n//         };\n\n//         const documentId = documentIdMap[idType.toLowerCase()]; // Get document ID from the map\n\n//         if (!documentId) {\n//             setStatus('Please select a valid ID type.');\n//             return false;\n//         }\n\n//         formData.append('documentId', documentId); // Use mapped documentId\n//         formData.append('expectedDocumentSide', 'front');\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, { headers });\n//             console.log('API Response:', response.data);\n\n//             const details = response.data?.result?.details?.[0]?.fieldsExtracted;\n\n//             if (details) {\n//                 // Check if the important fields (fullName, dateOfBirth, idNumber) are extracted\n//                 const { fullName, dateOfBirth, idNumber } = details;\n\n//                 if (fullName && dateOfBirth && idNumber) {\n//                     setStatus(`${idType.charAt(0).toUpperCase() + idType.slice(1)} validated successfully!`);\n//                     setStep(4); // Move to next step after ID validation\n//                     return true;\n//                 } else {\n//                     setStatus('Missing important details in the ID card.');\n//                     return false;\n//                 }\n//             } else {\n//                 setStatus('Unable to fetch ID card details.');\n//                 return false;\n//             }\n//         } catch (error) {\n//             console.error('Error validating ID Card:', error);\n//             setStatus('Validation failed.');\n//             return false;\n//         }\n//     };\n\n//         const validateSelfie = async () => {\n//         if (!selfie) return false;\n//         setStatus('Validating selfie...');\n//         const formData = new FormData();\n//         formData.append('file', selfie);\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/checkLiveness', formData, { headers });\n//             return response.data.isLive;\n//         } catch (error) {\n//             console.error('Error validating selfie:', error);\n//             setStatus('Selfie validation failed.');\n//             return false;\n//         }\n//     };\n\n//     const matchFace = async () => {\n//         const formData = new FormData();\n//         formData.append('selfie', selfie);\n//         formData.append('idCard', idCard);\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/matchFace', formData, { headers });\n//             return response.data.isMatch;\n//         } catch (error) {\n//             console.error('Error matching face:', error);\n//             setStatus('Face match failed.');\n//             return false;\n//         }\n//     };\n\n//     const handleSubmitDL = async () => {\n//         setStatusMessage('Validating Driver License...');\n//         const isDLValid = await validateDL();\n\n//         if (isDLValid) {\n//             setStep(3);\n//             setStatusMessage(`Driver's License is valid.`);\n//         } else {\n//             setStatusMessage(`Validation failed`);\n//         }\n//     };\n//     const handleSubmitID = async () => {\n//         setStatusMessage('Validating ID Card...');\n//         const isIDValid = await validateIDCard();\n\n//         if (isIDValid) {\n//             setStep(4); // Proceed to next step after successful ID validation\n//         } else {\n//             setStatusMessage('ID Card validation faileddd.');\n//         }\n//     };\n\n//     const handleSubmitSelfie = async () => {\n//         setStatusMessage('Validating selfie...');\n//         const isSelfieValid = await validateSelfie();\n//         const isFaceMatch = await matchFace();\n//         if (isSelfieValid && isFaceMatch) {\n//             setStatusMessage('KYC process completed successfully.');\n//             setStep(5);\n//         } else {\n//             setStatusMessage('Selfie verification or face match failed.');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Driver KYC Process</h2>\n\n//             {step === 1 && (\n//                 <div>\n//                     <h3>Step 1: Basic Information</h3>\n//                     <input \n//                         type=\"text\" \n//                         placeholder=\"Name\" \n//                         onChange={(e) => setDriverInfo({ ...driverInfo, name: e.target.value })} \n//                     />\n//                     <input \n//                         type=\"text\" \n//                         placeholder=\"Phone\" \n//                         value={driverInfo.phone} \n//                         onChange={(e) => e.target.value.length <= 13 && setDriverInfo({ ...driverInfo, phone: e.target.value })} \n//                     />\n//                     <input \n//                         type=\"email\" \n//                         placeholder=\"Email\" \n//                         value={driverInfo.email} \n//                         onChange={(e) => setDriverInfo({ ...driverInfo, email: e.target.value })} \n//                     />\n//                     <button onClick={() => setStep(2)}>Next</button>\n//                 </div>\n//             )}\n\n//             {step === 2 && (\n//                 <div>\n//                     <h3>Step 2: Upload Driver's License</h3>\n//                     <input \n//                         type=\"file\" \n//                         accept=\".jpg,.png,.pdf\" \n//                         onChange={(e) => handleFileUpload(e, setDriverLicense)} \n//                     />\n//                     <button onClick={handleSubmitDL}>Submit</button>\n//                 </div>\n//             )}\n\n//             {step === 3 && (\n//                 <div>\n//                     <h3>Step 3: Upload ID Card</h3>\n//                     <label>Select ID Type:</label>\n//                     <select value={idType} onChange={(e) => setIdType(e.target.value)}>\n//                         <option value=\"\">--Select--</option>\n//                         <option value=\"aadhaar\">Aadhaar</option>\n//                         <option value=\"passport\">Passport</option>\n//                         <option value=\"pan\">PAN</option>\n//                     </select>\n//                     <input \n//                         type=\"file\" \n//                         accept=\".jpg,.png,.pdf\" \n//                         onChange={(e) => handleFileUpload(e, setIdCard)} \n//                     />\n//                     <button onClick={handleSubmitID}>Submit</button>\n//                 </div>\n//             )}\n\n//             {step === 4 && (\n//                 <div>\n//                     <h3>Step 4: Upload Selfie</h3>\n//                     <input \n//                         type=\"file\" \n//                         accept=\".jpg,.png\" \n//                         onChange={(e) => handleFileUpload(e, setSelfie)} \n//                     />\n//                     <button onClick={handleSubmitSelfie}>Submit</button>\n//                 </div>\n//             )}\n\n//             <p>{statusMessage}</p>\n//         </div>\n//     );\n// }\n\n// export default KYCProcess;\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DriverKYC = () => {\n  _s();\n  const [driverLicense, setDriverLicense] = useState(null);\n  const [idCard, setIdCard] = useState(null);\n  const [selfie, setSelfie] = useState(null);\n  const [status, setStatus] = useState('');\n  const [step, setStep] = useState(1);\n  const [selectedDocument, setSelectedDocument] = useState(''); // No default, requires user to select\n  const [driverName, setDriverName] = useState('');\n  const [phoneNo, setPhoneNo] = useState('');\n  const [age, setAge] = useState('');\n\n  // Common headers for all API requests\n  const headers = {\n    appId: 'yvdxyy',\n    appKey: '9epukpvlpl1asl3bym4j',\n    transactionId: 'driverkyc'\n  };\n\n  // File upload handler\n  const handleFileUpload = (e, setFile) => {\n    const file = e.target.files[0];\n    if (file && ['image/jpeg', 'image/png', 'application/pdf'].includes(file.type)) {\n      setFile(file);\n    } else {\n      alert('Invalid file type. Please upload jpg, png, or pdf.');\n    }\n  };\n\n  // Validate Driver's License\n  const validateDL = async () => {\n    setStatus('Validating Driver\\'s License...');\n    const formData = new FormData();\n    formData.append('image', driverLicense);\n    formData.append('countryId', 'ind'); // Replace with the driver's country ID\n    formData.append('documentId', 'dl'); // 'DL' for Driver's License\n    formData.append('expectedDocumentSide', 'front');\n    try {\n      var _response$data$result, _response$data$result2, _response$data$result3;\n      const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, {\n        headers\n      });\n      const details = (_response$data$result = response.data.result) === null || _response$data$result === void 0 ? void 0 : (_response$data$result2 = _response$data$result.details) === null || _response$data$result2 === void 0 ? void 0 : (_response$data$result3 = _response$data$result2[0]) === null || _response$data$result3 === void 0 ? void 0 : _response$data$result3.fieldsExtracted;\n      if (details) {\n        var _details$dateOfExpiry;\n        const dateOfExpiry = (_details$dateOfExpiry = details.dateOfExpiry) === null || _details$dateOfExpiry === void 0 ? void 0 : _details$dateOfExpiry.value;\n\n        // Check if dateOfExpiry exists and is valid\n        if (dateOfExpiry && new Date(dateOfExpiry.split('-').reverse().join('-')) > new Date()) {\n          setStep(2);\n          setStatus('Driver\\'s License validated successfully!');\n        } else {\n          alert('Driver\\'s License is invalid or expired.');\n          setStatus('Validation failed.');\n        }\n      } else {\n        alert('Unable to fetch Driver\\'s License details.');\n        setStatus('Validation failed.');\n      }\n    } catch (error) {\n      console.error(error);\n      alert('Error validating Driver\\'s License.');\n      setStatus('Validation failed.');\n    }\n  };\n\n  // Validate ID Card\n  const validateID = async () => {\n    if (!selectedDocument) {\n      alert('Please select a document type.');\n      return;\n    }\n    setStatus('Validating ID Card...');\n    const formData = new FormData();\n    formData.append('image', idCard);\n    formData.append('countryId', 'ind'); // Replace with driver's country ID\n\n    // Map selected document to corresponding documentId\n    const documentIdMap = {\n      Aadhaar: 'id',\n      // Aadhaar is 'id' in the document API\n      Passport: 'passport',\n      // Passport is 'passport'\n      'PAN Card': 'pan' // PAN Card is 'pan'\n    };\n    formData.append('documentId', documentIdMap[selectedDocument]); // Use mapped documentId\n    formData.append('expectedDocumentSide', 'front');\n    try {\n      var _response$data$result4, _response$data$result5, _response$data$result6;\n      const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, {\n        headers\n      });\n\n      // Check if the response has valid details and extract the fields\n      const details = (_response$data$result4 = response.data.result) === null || _response$data$result4 === void 0 ? void 0 : (_response$data$result5 = _response$data$result4.details) === null || _response$data$result5 === void 0 ? void 0 : (_response$data$result6 = _response$data$result5[0]) === null || _response$data$result6 === void 0 ? void 0 : _response$data$result6.fieldsExtracted;\n      if (details) {\n        // Check if the full name or other necessary fields are extracted\n        const {\n          fullName,\n          dateOfBirth,\n          idNumber\n        } = details;\n        if (fullName && dateOfBirth && idNumber) {\n          // Document is valid\n          setStep(3);\n          setStatus(`${selectedDocument} validated successfully!`);\n        } else {\n          alert('Missing important details in the ID card. Please check the uploaded file.');\n          setStatus('Validation failed.');\n        }\n      } else {\n        alert('Unable to fetch ID card details. Please try again.');\n        setStatus('Validation failed.');\n      }\n    } catch (error) {\n      console.error(error);\n      alert('Error validating ID Card. Please try again.');\n      setStatus('Validation failed.');\n    }\n  };\n\n  // Validate Selfie\n  const validateSelfie = async () => {\n    setStatus('Validating Selfie...');\n    const formData = new FormData();\n    formData.append('image', selfie);\n    try {\n      var _response$data$result7, _response$data$result8;\n      const response = await axios.post('https://ind.idv.hyperverge.co/v1/checkLiveness', formData, {\n        headers\n      });\n\n      // Log the full API response for debugging\n      console.log('API Response:', response.data);\n\n      // Extract the necessary fields for basic validation\n      const liveFace = (_response$data$result7 = response.data.result) === null || _response$data$result7 === void 0 ? void 0 : (_response$data$result8 = _response$data$result7.details) === null || _response$data$result8 === void 0 ? void 0 : _response$data$result8.liveFace;\n      if (liveFace && liveFace.value === 'yes') {\n        setStep(4);\n        setStatus('Selfie validated successfully!');\n      } else {\n        alert('Selfie validation failed. The face is not detected as live.');\n        setStatus('Validation failed.');\n      }\n    } catch (error) {\n      console.error('Error validating selfie:', error.response ? error.response.data : error.message);\n      alert('Error validating selfie. Please check the console for details.');\n      setStatus('Validation failed.');\n    }\n  };\n\n  // Face Match for Driver's License and Selfie\n  const matchFace = async () => {\n    setStatus('Matching Face...');\n\n    // Create a FormData instance to hold the images\n    const formData = new FormData();\n    formData.append('selfie', selfie); // Selfie image\n    formData.append('id', driverLicense); // Driver's License image\n\n    try {\n      var _response$data$result9, _response$data$result10;\n      // Send a POST request to the Face Match API\n      const response = await axios.post('https://ind.idv.hyperverge.co/v1/matchFace', formData, {\n        headers\n      });\n\n      // Log the full response for debugging\n      console.log('API Response:', response.data);\n\n      // Check if the face match value is 'yes'\n      const match = (_response$data$result9 = response.data.result) === null || _response$data$result9 === void 0 ? void 0 : (_response$data$result10 = _response$data$result9.details) === null || _response$data$result10 === void 0 ? void 0 : _response$data$result10.match;\n      if (match && match.value === 'yes') {\n        setStatus('KYC Process Successful! Face match successful.');\n      } else {\n        alert('Face match failed. Please try again.');\n        setStatus('KYC Failed. Face match failed.');\n      }\n    } catch (error) {\n      console.error('Error in face match process:', error.response ? error.response.data : error.message);\n      alert('Error in face match process. Please check the console for details.');\n      setStatus('KYC Failed.');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (step === 1) await validateDL();else if (step === 2) await validateID();else if (step === 3) await validateSelfie();else if (step === 4) await matchFace();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kyc-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Driver KYC Process\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"kyc-form\",\n      children: [step === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kyc-step\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Driver's Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: driverName,\n          onChange: e => setDriverName(e.target.value),\n          placeholder: \"Enter Driver's Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Phone Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: phoneNo,\n          onChange: e => setPhoneNo(e.target.value),\n          placeholder: \"Enter Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Age:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: age,\n          onChange: e => setAge(e.target.value),\n          placeholder: \"Enter Age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Upload Driver's License:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => handleFileUpload(e, setDriverLicense)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Validate Driver's License\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 11\n      }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kyc-step\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Choose ID Document:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDocument,\n          onChange: e => setSelectedDocument(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Document Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Aadhaar\",\n            children: \"Aadhaar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Passport\",\n            children: \"Passport\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"PAN Card\",\n            children: \"PAN Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Upload ID Card:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => handleFileUpload(e, setIdCard)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Validate ID Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 11\n      }, this), step === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kyc-step\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Upload Selfie:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => handleFileUpload(e, setSelfie)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Validate Selfie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 11\n      }, this), step === 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kyc-step\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Selfie and ID Card successfully uploaded.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Match Face\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status-message\",\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 458,\n    columnNumber: 5\n  }, this);\n};\n_s(DriverKYC, \"8xQ6LSHEWOiA9ni6hCwREAQqDUY=\");\n_c = DriverKYC;\nexport default DriverKYC;\nvar _c;\n$RefreshReg$(_c, \"DriverKYC\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","DriverKYC","_s","driverLicense","setDriverLicense","idCard","setIdCard","selfie","setSelfie","status","setStatus","step","setStep","selectedDocument","setSelectedDocument","driverName","setDriverName","phoneNo","setPhoneNo","age","setAge","headers","appId","appKey","transactionId","handleFileUpload","e","setFile","file","target","files","includes","type","alert","validateDL","formData","FormData","append","_response$data$result","_response$data$result2","_response$data$result3","response","post","details","data","result","fieldsExtracted","_details$dateOfExpiry","dateOfExpiry","value","Date","split","reverse","join","error","console","validateID","documentIdMap","Aadhaar","Passport","_response$data$result4","_response$data$result5","_response$data$result6","fullName","dateOfBirth","idNumber","validateSelfie","_response$data$result7","_response$data$result8","log","liveFace","message","matchFace","_response$data$result9","_response$data$result10","match","handleSubmit","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","_c","$RefreshReg$"],"sources":["/home/user/Desktop/Week-0/MERN-main/frontend/src/components/DriverKYC.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function KYCProcess() {\n//     const [step, setStep] = useState(1);\n//     const [driverInfo, setDriverInfo] = useState({ name: '', phone: '+91', email: 'hello@mail.com' });\n//     const [driverLicense, setDriverLicense] = useState(null);\n//     const [idCard, setIdCard] = useState(null);\n//     const [selfie, setSelfie] = useState(null);\n//     const [statusMessage, setStatusMessage] = useState('');\n//     const [dateOfExpiry, setDateOfExpiry] = useState('');\n//     const [idType, setIdType] = useState('');  // Added this line to define idType state\n//     const acceptedIdTypes = ['aadhaar', 'passport', 'pan'];\n//     const [status, setStatus] = useState('');\n\n//     const headers = {\n//         appId: 'yvdxyy',\n//         appKey: '9epukpvlpl1asl3bym4j',\n//         transactionId: 'driverkyc'\n//     };\n\n//     const handleFileUpload = (e, setFile) => {\n//         const file = e.target.files[0];\n//         if (file && ['image/jpeg', 'image/png', 'application/pdf'].includes(file.type)) {\n//             setFile(file);\n//         } else {\n//             alert('Invalid file type. Please upload JPG, PNG, or PDF.');\n//         }\n//     };\n\n//     const validateDL = async () => {\n//         setStatus('Validating Driver License...');\n//         const formData = new FormData();\n//         formData.append('image', driverLicense);\n//         formData.append('countryId', 'ind');\n//         formData.append('documentId', 'dl');\n//         formData.append('expectedDocumentSide', 'front');\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, { headers });\n//             console.log('API Response:', response.data);\n\n//             const details = response.data?.result?.details?.[0]?.fieldsExtracted;\n\n//             if (details?.dateOfExpiry?.value) {\n//                 const expiryDate = details.dateOfExpiry.value;\n//                 setDateOfExpiry(expiryDate);\n\n//                 const expiryDateObj = new Date(expiryDate.split('-').reverse().join('-'));\n//                 if (expiryDateObj > new Date()) {\n//                     setStatus('Driver License validated successfully!');\n//                     return true;\n//                 } else {\n//                     setStatus('Driver License is expired.');\n//                     return false;\n//                 }\n//             } else {\n//                 setStatus('Unable to fetch Driver License details.');\n//                 return false;\n//             }\n//         } catch (error) {\n//             console.error('Error validating Driver License:', error);\n//             setStatus('Validation failed.');\n//             return false;\n//         }\n//     };\n\n//     const validateIDCard = async () => {\n//         if (!idCard || !idType) {\n//             setStatus('Please provide both ID card and select a valid ID type.');\n//             return false;\n//         }\n    \n//         setStatus('Validating ID Card...');\n//         const formData = new FormData();\n//         formData.append('file', idCard);\n//         formData.append('countryId', 'ind'); // Ensure the countryId is correct\n    \n//         // Map selected ID type to the corresponding document ID\n//         const documentIdMap = {\n//             aadhaar: 'id',       // Aadhaar is 'id' in the document API\n//             pan: 'pan',          // PAN is 'pan'\n//             passport: 'passport', // Passport is 'passport'\n//         };\n    \n//         const documentId = documentIdMap[idType.toLowerCase()]; // Get document ID from the map\n    \n//         if (!documentId) {\n//             setStatus('Please select a valid ID type.');\n//             return false;\n//         }\n    \n//         formData.append('documentId', documentId); // Use mapped documentId\n//         formData.append('expectedDocumentSide', 'front');\n    \n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, { headers });\n//             console.log('API Response:', response.data);\n    \n//             const details = response.data?.result?.details?.[0]?.fieldsExtracted;\n    \n//             if (details) {\n//                 // Check if the important fields (fullName, dateOfBirth, idNumber) are extracted\n//                 const { fullName, dateOfBirth, idNumber } = details;\n    \n//                 if (fullName && dateOfBirth && idNumber) {\n//                     setStatus(`${idType.charAt(0).toUpperCase() + idType.slice(1)} validated successfully!`);\n//                     setStep(4); // Move to next step after ID validation\n//                     return true;\n//                 } else {\n//                     setStatus('Missing important details in the ID card.');\n//                     return false;\n//                 }\n//             } else {\n//                 setStatus('Unable to fetch ID card details.');\n//                 return false;\n//             }\n//         } catch (error) {\n//             console.error('Error validating ID Card:', error);\n//             setStatus('Validation failed.');\n//             return false;\n//         }\n//     };\n    \n//         const validateSelfie = async () => {\n//         if (!selfie) return false;\n//         setStatus('Validating selfie...');\n//         const formData = new FormData();\n//         formData.append('file', selfie);\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/checkLiveness', formData, { headers });\n//             return response.data.isLive;\n//         } catch (error) {\n//             console.error('Error validating selfie:', error);\n//             setStatus('Selfie validation failed.');\n//             return false;\n//         }\n//     };\n\n//     const matchFace = async () => {\n//         const formData = new FormData();\n//         formData.append('selfie', selfie);\n//         formData.append('idCard', idCard);\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/matchFace', formData, { headers });\n//             return response.data.isMatch;\n//         } catch (error) {\n//             console.error('Error matching face:', error);\n//             setStatus('Face match failed.');\n//             return false;\n//         }\n//     };\n\n//     const handleSubmitDL = async () => {\n//         setStatusMessage('Validating Driver License...');\n//         const isDLValid = await validateDL();\n\n//         if (isDLValid) {\n//             setStep(3);\n//             setStatusMessage(`Driver's License is valid.`);\n//         } else {\n//             setStatusMessage(`Validation failed`);\n//         }\n//     };\n//     const handleSubmitID = async () => {\n//         setStatusMessage('Validating ID Card...');\n//         const isIDValid = await validateIDCard();\n    \n//         if (isIDValid) {\n//             setStep(4); // Proceed to next step after successful ID validation\n//         } else {\n//             setStatusMessage('ID Card validation faileddd.');\n//         }\n//     };\n    \n    \n    \n\n//     const handleSubmitSelfie = async () => {\n//         setStatusMessage('Validating selfie...');\n//         const isSelfieValid = await validateSelfie();\n//         const isFaceMatch = await matchFace();\n//         if (isSelfieValid && isFaceMatch) {\n//             setStatusMessage('KYC process completed successfully.');\n//             setStep(5);\n//         } else {\n//             setStatusMessage('Selfie verification or face match failed.');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Driver KYC Process</h2>\n\n//             {step === 1 && (\n//                 <div>\n//                     <h3>Step 1: Basic Information</h3>\n//                     <input \n//                         type=\"text\" \n//                         placeholder=\"Name\" \n//                         onChange={(e) => setDriverInfo({ ...driverInfo, name: e.target.value })} \n//                     />\n//                     <input \n//                         type=\"text\" \n//                         placeholder=\"Phone\" \n//                         value={driverInfo.phone} \n//                         onChange={(e) => e.target.value.length <= 13 && setDriverInfo({ ...driverInfo, phone: e.target.value })} \n//                     />\n//                     <input \n//                         type=\"email\" \n//                         placeholder=\"Email\" \n//                         value={driverInfo.email} \n//                         onChange={(e) => setDriverInfo({ ...driverInfo, email: e.target.value })} \n//                     />\n//                     <button onClick={() => setStep(2)}>Next</button>\n//                 </div>\n//             )}\n\n//             {step === 2 && (\n//                 <div>\n//                     <h3>Step 2: Upload Driver's License</h3>\n//                     <input \n//                         type=\"file\" \n//                         accept=\".jpg,.png,.pdf\" \n//                         onChange={(e) => handleFileUpload(e, setDriverLicense)} \n//                     />\n//                     <button onClick={handleSubmitDL}>Submit</button>\n//                 </div>\n//             )}\n\n//             {step === 3 && (\n//                 <div>\n//                     <h3>Step 3: Upload ID Card</h3>\n//                     <label>Select ID Type:</label>\n//                     <select value={idType} onChange={(e) => setIdType(e.target.value)}>\n//                         <option value=\"\">--Select--</option>\n//                         <option value=\"aadhaar\">Aadhaar</option>\n//                         <option value=\"passport\">Passport</option>\n//                         <option value=\"pan\">PAN</option>\n//                     </select>\n//                     <input \n//                         type=\"file\" \n//                         accept=\".jpg,.png,.pdf\" \n//                         onChange={(e) => handleFileUpload(e, setIdCard)} \n//                     />\n//                     <button onClick={handleSubmitID}>Submit</button>\n//                 </div>\n//             )}\n\n//             {step === 4 && (\n//                 <div>\n//                     <h3>Step 4: Upload Selfie</h3>\n//                     <input \n//                         type=\"file\" \n//                         accept=\".jpg,.png\" \n//                         onChange={(e) => handleFileUpload(e, setSelfie)} \n//                     />\n//                     <button onClick={handleSubmitSelfie}>Submit</button>\n//                 </div>\n//             )}\n\n//             <p>{statusMessage}</p>\n//         </div>\n//     );\n// }\n\n// export default KYCProcess;\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst DriverKYC = () => {\n  const [driverLicense, setDriverLicense] = useState(null);\n  const [idCard, setIdCard] = useState(null);\n  const [selfie, setSelfie] = useState(null);\n  const [status, setStatus] = useState('');\n  const [step, setStep] = useState(1);\n  const [selectedDocument, setSelectedDocument] = useState(''); // No default, requires user to select\n  const [driverName, setDriverName] = useState('');\n  const [phoneNo, setPhoneNo] = useState('');\n  const [age, setAge] = useState('');\n\n  // Common headers for all API requests\n  const headers = {\n      appId: 'yvdxyy',\n      appKey: '9epukpvlpl1asl3bym4j',\n      transactionId: 'driverkyc'\n        };\n\n\n  // File upload handler\n  const handleFileUpload = (e, setFile) => {\n    const file = e.target.files[0];\n    if (file && ['image/jpeg', 'image/png', 'application/pdf'].includes(file.type)) {\n      setFile(file);\n    } else {\n      alert('Invalid file type. Please upload jpg, png, or pdf.');\n    }\n  };\n\n  // Validate Driver's License\n  const validateDL = async () => {\n    setStatus('Validating Driver\\'s License...');\n    const formData = new FormData();\n    formData.append('image', driverLicense);\n    formData.append('countryId', 'ind'); // Replace with the driver's country ID\n    formData.append('documentId', 'dl'); // 'DL' for Driver's License\n    formData.append('expectedDocumentSide', 'front');\n  \n    try {\n      const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, { headers });\n      const details = response.data.result?.details?.[0]?.fieldsExtracted;\n  \n      if (details) {\n        const dateOfExpiry = details.dateOfExpiry?.value;\n  \n        // Check if dateOfExpiry exists and is valid\n        if (dateOfExpiry && new Date(dateOfExpiry.split('-').reverse().join('-')) > new Date()) {\n          setStep(2);\n          setStatus('Driver\\'s License validated successfully!');\n        } else {\n          alert('Driver\\'s License is invalid or expired.');\n          setStatus('Validation failed.');\n        }\n      } else {\n        alert('Unable to fetch Driver\\'s License details.');\n        setStatus('Validation failed.');\n      }\n    } catch (error) {\n      console.error(error);\n      alert('Error validating Driver\\'s License.');\n      setStatus('Validation failed.');\n    }\n  };\n  \n  // Validate ID Card\n  const validateID = async () => {\n    if (!selectedDocument) {\n      alert('Please select a document type.');\n      return;\n    }\n  \n    setStatus('Validating ID Card...');\n    const formData = new FormData();\n    formData.append('image', idCard);\n    formData.append('countryId', 'ind'); // Replace with driver's country ID\n  \n    // Map selected document to corresponding documentId\n    const documentIdMap = {\n      Aadhaar: 'id',          // Aadhaar is 'id' in the document API\n      Passport: 'passport',   // Passport is 'passport'\n      'PAN Card': 'pan',      // PAN Card is 'pan'\n    };\n  \n    formData.append('documentId', documentIdMap[selectedDocument]); // Use mapped documentId\n    formData.append('expectedDocumentSide', 'front');\n  \n    try {\n      const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, { headers });\n      \n      // Check if the response has valid details and extract the fields\n      const details = response.data.result?.details?.[0]?.fieldsExtracted;\n      \n      if (details) {\n        // Check if the full name or other necessary fields are extracted\n        const { fullName, dateOfBirth, idNumber } = details;\n        \n        if (fullName && dateOfBirth && idNumber) {\n          // Document is valid\n          setStep(3);\n          setStatus(`${selectedDocument} validated successfully!`);\n        } else {\n          alert('Missing important details in the ID card. Please check the uploaded file.');\n          setStatus('Validation failed.');\n        }\n      } else {\n        alert('Unable to fetch ID card details. Please try again.');\n        setStatus('Validation failed.');\n      }\n    } catch (error) {\n      console.error(error);\n      alert('Error validating ID Card. Please try again.');\n      setStatus('Validation failed.');\n    }\n  };\n\n  // Validate Selfie\n  const validateSelfie = async () => {\n    setStatus('Validating Selfie...');\n    const formData = new FormData();\n    formData.append('image', selfie);\n  \n    try {\n      const response = await axios.post('https://ind.idv.hyperverge.co/v1/checkLiveness', formData, { headers });\n      \n      // Log the full API response for debugging\n      console.log('API Response:', response.data);\n  \n      // Extract the necessary fields for basic validation\n      const liveFace = response.data.result?.details?.liveFace;\n  \n      if (liveFace && liveFace.value === 'yes') {\n        setStep(4);\n        setStatus('Selfie validated successfully!');\n      } else {\n        alert('Selfie validation failed. The face is not detected as live.');\n        setStatus('Validation failed.');\n      }\n    } catch (error) {\n      console.error('Error validating selfie:', error.response ? error.response.data : error.message);\n      alert('Error validating selfie. Please check the console for details.');\n      setStatus('Validation failed.');\n    }\n  };\n\n  // Face Match for Driver's License and Selfie\n  const matchFace = async () => {\n    setStatus('Matching Face...');\n    \n    // Create a FormData instance to hold the images\n    const formData = new FormData();\n    formData.append('selfie', selfie);  // Selfie image\n    formData.append('id', driverLicense);  // Driver's License image\n  \n    try {\n      // Send a POST request to the Face Match API\n      const response = await axios.post('https://ind.idv.hyperverge.co/v1/matchFace', formData, { headers });\n  \n      // Log the full response for debugging\n      console.log('API Response:', response.data);\n  \n      // Check if the face match value is 'yes'\n      const match = response.data.result?.details?.match;\n  \n      if (match && match.value === 'yes') {\n        setStatus('KYC Process Successful! Face match successful.');\n      } else {\n        alert('Face match failed. Please try again.');\n        setStatus('KYC Failed. Face match failed.');\n      }\n    } catch (error) {\n      console.error('Error in face match process:', error.response ? error.response.data : error.message);\n      alert('Error in face match process. Please check the console for details.');\n      setStatus('KYC Failed.');\n    }\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (step === 1) await validateDL();\n    else if (step === 2) await validateID();\n    else if (step === 3) await validateSelfie();\n    else if (step === 4) await matchFace();\n  };\n\n  return (\n    <div className=\"kyc-container\">\n      <h1>Driver KYC Process</h1>\n      <form onSubmit={handleSubmit} className=\"kyc-form\">\n        {step === 1 && (\n          <div className=\"kyc-step\">\n            <label>Driver's Name:</label>\n            <input type=\"text\" value={driverName} onChange={(e) => setDriverName(e.target.value)} placeholder=\"Enter Driver's Name\" />\n            <br />\n            <label>Phone Number:</label>\n            <input type=\"text\" value={phoneNo} onChange={(e) => setPhoneNo(e.target.value)} placeholder=\"Enter Phone Number\" />\n            <br />\n            <label>Age:</label>\n            <input type=\"number\" value={age} onChange={(e) => setAge(e.target.value)} placeholder=\"Enter Age\" />\n            <br />\n            <label>Upload Driver's License:</label>\n            <input type=\"file\" onChange={(e) => handleFileUpload(e, setDriverLicense)} />\n            <br />\n            <button type=\"submit\">Validate Driver's License</button>\n          </div>\n        )}\n        {step === 2 && (\n          <div className=\"kyc-step\">\n            <label>Choose ID Document:</label>\n            <select value={selectedDocument} onChange={(e) => setSelectedDocument(e.target.value)}>\n              <option value=\"\">Select Document Type</option>\n              <option value=\"Aadhaar\">Aadhaar</option>\n              <option value=\"Passport\">Passport</option>\n              <option value=\"PAN Card\">PAN Card</option>\n            </select>\n            <br />\n            <label>Upload ID Card:</label>\n            <input type=\"file\" onChange={(e) => handleFileUpload(e, setIdCard)} />\n            <br />\n            <button type=\"submit\">Validate ID Card</button>\n          </div>\n        )}\n        {step === 3 && (\n          <div className=\"kyc-step\">\n            <label>Upload Selfie:</label>\n            <input type=\"file\" onChange={(e) => handleFileUpload(e, setSelfie)} />\n            <br />\n            <button type=\"submit\">Validate Selfie</button>\n          </div>\n        )}\n        {step === 4 && (\n          <div className=\"kyc-step\">\n            <p>Selfie and ID Card successfully uploaded.</p>\n            <button type=\"submit\">Match Face</button>\n          </div>\n        )}\n      </form>\n      <p className=\"status-message\">Status: {status}</p>\n    </div>\n  );\n};\n\nexport default DriverKYC;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}