{"ast":null,"code":"// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function KYCProcess() {\n//     const [step, setStep] = useState(1);\n//     const [driverInfo, setDriverInfo] = useState({ name: '', phone: '+91', email: 'hello@mail.com' });\n//     const [driverLicense, setDriverLicense] = useState(null);\n//     const [idCard, setIdCard] = useState(null);\n//     const [selfie, setSelfie] = useState(null);\n//     const [statusMessage, setStatusMessage] = useState('');\n//     const [dateOfExpiry, setDateOfExpiry] = useState('');\n//     const [idType, setIdType] = useState('');  // Added this line to define idType state\n//     const acceptedIdTypes = ['aadhaar', 'passport', 'pan'];\n//     const [status, setStatus] = useState('');\n\n//     const headers = {\n//         appId: 'yvdxyy',\n//         appKey: '9epukpvlpl1asl3bym4j',\n//         transactionId: 'driverkyc'\n//     };\n\n//     const handleFileUpload = (e, setFile) => {\n//         const file = e.target.files[0];\n//         if (file && ['image/jpeg', 'image/png', 'application/pdf'].includes(file.type)) {\n//             setFile(file);\n//         } else {\n//             alert('Invalid file type. Please upload JPG, PNG, or PDF.');\n//         }\n//     };\n\n//     const validateDL = async () => {\n//         setStatus('Validating Driver License...');\n//         const formData = new FormData();\n//         formData.append('image', driverLicense);\n//         formData.append('countryId', 'ind');\n//         formData.append('documentId', 'dl');\n//         formData.append('expectedDocumentSide', 'front');\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, { headers });\n//             console.log('API Response:', response.data);\n\n//             const details = response.data?.result?.details?.[0]?.fieldsExtracted;\n\n//             if (details?.dateOfExpiry?.value) {\n//                 const expiryDate = details.dateOfExpiry.value;\n//                 setDateOfExpiry(expiryDate);\n\n//                 const expiryDateObj = new Date(expiryDate.split('-').reverse().join('-'));\n//                 if (expiryDateObj > new Date()) {\n//                     setStatus('Driver License validated successfully!');\n//                     return true;\n//                 } else {\n//                     setStatus('Driver License is expired.');\n//                     return false;\n//                 }\n//             } else {\n//                 setStatus('Unable to fetch Driver License details.');\n//                 return false;\n//             }\n//         } catch (error) {\n//             console.error('Error validating Driver License:', error);\n//             setStatus('Validation failed.');\n//             return false;\n//         }\n//     };\n\n//     const validateIDCard = async () => {\n//         if (!idCard || !idType) {\n//             setStatus('Please provide both ID card and select a valid ID type.');\n//             return false;\n//         }\n\n//         setStatus('Validating ID Card...');\n//         const formData = new FormData();\n//         formData.append('file', idCard);\n//         formData.append('countryId', 'ind'); // Ensure the countryId is correct\n\n//         // Map selected ID type to the corresponding document ID\n//         const documentIdMap = {\n//             aadhaar: 'id',       // Aadhaar is 'id' in the document API\n//             pan: 'pan',          // PAN is 'pan'\n//             passport: 'passport', // Passport is 'passport'\n//         };\n\n//         const documentId = documentIdMap[idType.toLowerCase()]; // Get document ID from the map\n\n//         if (!documentId) {\n//             setStatus('Please select a valid ID type.');\n//             return false;\n//         }\n\n//         formData.append('documentId', documentId); // Use mapped documentId\n//         formData.append('expectedDocumentSide', 'front');\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, { headers });\n//             console.log('API Response:', response.data);\n\n//             const details = response.data?.result?.details?.[0]?.fieldsExtracted;\n\n//             if (details) {\n//                 // Check if the important fields (fullName, dateOfBirth, idNumber) are extracted\n//                 const { fullName, dateOfBirth, idNumber } = details;\n\n//                 if (fullName && dateOfBirth && idNumber) {\n//                     setStatus(`${idType.charAt(0).toUpperCase() + idType.slice(1)} validated successfully!`);\n//                     setStep(4); // Move to next step after ID validation\n//                     return true;\n//                 } else {\n//                     setStatus('Missing important details in the ID card.');\n//                     return false;\n//                 }\n//             } else {\n//                 setStatus('Unable to fetch ID card details.');\n//                 return false;\n//             }\n//         } catch (error) {\n//             console.error('Error validating ID Card:', error);\n//             setStatus('Validation failed.');\n//             return false;\n//         }\n//     };\n\n//         const validateSelfie = async () => {\n//         if (!selfie) return false;\n//         setStatus('Validating selfie...');\n//         const formData = new FormData();\n//         formData.append('file', selfie);\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/checkLiveness', formData, { headers });\n//             return response.data.isLive;\n//         } catch (error) {\n//             console.error('Error validating selfie:', error);\n//             setStatus('Selfie validation failed.');\n//             return false;\n//         }\n//     };\n\n//     const matchFace = async () => {\n//         const formData = new FormData();\n//         formData.append('selfie', selfie);\n//         formData.append('idCard', idCard);\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/matchFace', formData, { headers });\n//             return response.data.isMatch;\n//         } catch (error) {\n//             console.error('Error matching face:', error);\n//             setStatus('Face match failed.');\n//             return false;\n//         }\n//     };\n\n//     const handleSubmitDL = async () => {\n//         setStatusMessage('Validating Driver License...');\n//         const isDLValid = await validateDL();\n\n//         if (isDLValid) {\n//             setStep(3);\n//             setStatusMessage(`Driver's License is valid.`);\n//         } else {\n//             setStatusMessage(`Validation failed`);\n//         }\n//     };\n//     const handleSubmitID = async () => {\n//         setStatusMessage('Validating ID Card...');\n//         const isIDValid = await validateIDCard();\n\n//         if (isIDValid) {\n//             setStep(4); // Proceed to next step after successful ID validation\n//         } else {\n//             setStatusMessage('ID Card validation faileddd.');\n//         }\n//     };\n\n//     const handleSubmitSelfie = async () => {\n//         setStatusMessage('Validating selfie...');\n//         const isSelfieValid = await validateSelfie();\n//         const isFaceMatch = await matchFace();\n//         if (isSelfieValid && isFaceMatch) {\n//             setStatusMessage('KYC process completed successfully.');\n//             setStep(5);\n//         } else {\n//             setStatusMessage('Selfie verification or face match failed.');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Driver KYC Process</h2>\n\n//             {step === 1 && (\n//                 <div>\n//                     <h3>Step 1: Basic Information</h3>\n//                     <input \n//                         type=\"text\" \n//                         placeholder=\"Name\" \n//                         onChange={(e) => setDriverInfo({ ...driverInfo, name: e.target.value })} \n//                     />\n//                     <input \n//                         type=\"text\" \n//                         placeholder=\"Phone\" \n//                         value={driverInfo.phone} \n//                         onChange={(e) => e.target.value.length <= 13 && setDriverInfo({ ...driverInfo, phone: e.target.value })} \n//                     />\n//                     <input \n//                         type=\"email\" \n//                         placeholder=\"Email\" \n//                         value={driverInfo.email} \n//                         onChange={(e) => setDriverInfo({ ...driverInfo, email: e.target.value })} \n//                     />\n//                     <button onClick={() => setStep(2)}>Next</button>\n//                 </div>\n//             )}\n\n//             {step === 2 && (\n//                 <div>\n//                     <h3>Step 2: Upload Driver's License</h3>\n//                     <input \n//                         type=\"file\" \n//                         accept=\".jpg,.png,.pdf\" \n//                         onChange={(e) => handleFileUpload(e, setDriverLicense)} \n//                     />\n//                     <button onClick={handleSubmitDL}>Submit</button>\n//                 </div>\n//             )}\n\n//             {step === 3 && (\n//                 <div>\n//                     <h3>Step 3: Upload ID Card</h3>\n//                     <label>Select ID Type:</label>\n//                     <select value={idType} onChange={(e) => setIdType(e.target.value)}>\n//                         <option value=\"\">--Select--</option>\n//                         <option value=\"aadhaar\">Aadhaar</option>\n//                         <option value=\"passport\">Passport</option>\n//                         <option value=\"pan\">PAN</option>\n//                     </select>\n//                     <input \n//                         type=\"file\" \n//                         accept=\".jpg,.png,.pdf\" \n//                         onChange={(e) => handleFileUpload(e, setIdCard)} \n//                     />\n//                     <button onClick={handleSubmitID}>Submit</button>\n//                 </div>\n//             )}\n\n//             {step === 4 && (\n//                 <div>\n//                     <h3>Step 4: Upload Selfie</h3>\n//                     <input \n//                         type=\"file\" \n//                         accept=\".jpg,.png\" \n//                         onChange={(e) => handleFileUpload(e, setSelfie)} \n//                     />\n//                     <button onClick={handleSubmitSelfie}>Submit</button>\n//                 </div>\n//             )}\n\n//             <p>{statusMessage}</p>\n//         </div>\n//     );\n// }\n\n// export default KYCProcess;","map":{"version":3,"names":[],"sources":["/home/user/Desktop/Week-0/MERN-main/frontend/src/components/DriverKYC.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function KYCProcess() {\n//     const [step, setStep] = useState(1);\n//     const [driverInfo, setDriverInfo] = useState({ name: '', phone: '+91', email: 'hello@mail.com' });\n//     const [driverLicense, setDriverLicense] = useState(null);\n//     const [idCard, setIdCard] = useState(null);\n//     const [selfie, setSelfie] = useState(null);\n//     const [statusMessage, setStatusMessage] = useState('');\n//     const [dateOfExpiry, setDateOfExpiry] = useState('');\n//     const [idType, setIdType] = useState('');  // Added this line to define idType state\n//     const acceptedIdTypes = ['aadhaar', 'passport', 'pan'];\n//     const [status, setStatus] = useState('');\n\n//     const headers = {\n//         appId: 'yvdxyy',\n//         appKey: '9epukpvlpl1asl3bym4j',\n//         transactionId: 'driverkyc'\n//     };\n\n//     const handleFileUpload = (e, setFile) => {\n//         const file = e.target.files[0];\n//         if (file && ['image/jpeg', 'image/png', 'application/pdf'].includes(file.type)) {\n//             setFile(file);\n//         } else {\n//             alert('Invalid file type. Please upload JPG, PNG, or PDF.');\n//         }\n//     };\n\n//     const validateDL = async () => {\n//         setStatus('Validating Driver License...');\n//         const formData = new FormData();\n//         formData.append('image', driverLicense);\n//         formData.append('countryId', 'ind');\n//         formData.append('documentId', 'dl');\n//         formData.append('expectedDocumentSide', 'front');\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, { headers });\n//             console.log('API Response:', response.data);\n\n//             const details = response.data?.result?.details?.[0]?.fieldsExtracted;\n\n//             if (details?.dateOfExpiry?.value) {\n//                 const expiryDate = details.dateOfExpiry.value;\n//                 setDateOfExpiry(expiryDate);\n\n//                 const expiryDateObj = new Date(expiryDate.split('-').reverse().join('-'));\n//                 if (expiryDateObj > new Date()) {\n//                     setStatus('Driver License validated successfully!');\n//                     return true;\n//                 } else {\n//                     setStatus('Driver License is expired.');\n//                     return false;\n//                 }\n//             } else {\n//                 setStatus('Unable to fetch Driver License details.');\n//                 return false;\n//             }\n//         } catch (error) {\n//             console.error('Error validating Driver License:', error);\n//             setStatus('Validation failed.');\n//             return false;\n//         }\n//     };\n\n//     const validateIDCard = async () => {\n//         if (!idCard || !idType) {\n//             setStatus('Please provide both ID card and select a valid ID type.');\n//             return false;\n//         }\n    \n//         setStatus('Validating ID Card...');\n//         const formData = new FormData();\n//         formData.append('file', idCard);\n//         formData.append('countryId', 'ind'); // Ensure the countryId is correct\n    \n//         // Map selected ID type to the corresponding document ID\n//         const documentIdMap = {\n//             aadhaar: 'id',       // Aadhaar is 'id' in the document API\n//             pan: 'pan',          // PAN is 'pan'\n//             passport: 'passport', // Passport is 'passport'\n//         };\n    \n//         const documentId = documentIdMap[idType.toLowerCase()]; // Get document ID from the map\n    \n//         if (!documentId) {\n//             setStatus('Please select a valid ID type.');\n//             return false;\n//         }\n    \n//         formData.append('documentId', documentId); // Use mapped documentId\n//         formData.append('expectedDocumentSide', 'front');\n    \n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/readId', formData, { headers });\n//             console.log('API Response:', response.data);\n    \n//             const details = response.data?.result?.details?.[0]?.fieldsExtracted;\n    \n//             if (details) {\n//                 // Check if the important fields (fullName, dateOfBirth, idNumber) are extracted\n//                 const { fullName, dateOfBirth, idNumber } = details;\n    \n//                 if (fullName && dateOfBirth && idNumber) {\n//                     setStatus(`${idType.charAt(0).toUpperCase() + idType.slice(1)} validated successfully!`);\n//                     setStep(4); // Move to next step after ID validation\n//                     return true;\n//                 } else {\n//                     setStatus('Missing important details in the ID card.');\n//                     return false;\n//                 }\n//             } else {\n//                 setStatus('Unable to fetch ID card details.');\n//                 return false;\n//             }\n//         } catch (error) {\n//             console.error('Error validating ID Card:', error);\n//             setStatus('Validation failed.');\n//             return false;\n//         }\n//     };\n    \n//         const validateSelfie = async () => {\n//         if (!selfie) return false;\n//         setStatus('Validating selfie...');\n//         const formData = new FormData();\n//         formData.append('file', selfie);\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/checkLiveness', formData, { headers });\n//             return response.data.isLive;\n//         } catch (error) {\n//             console.error('Error validating selfie:', error);\n//             setStatus('Selfie validation failed.');\n//             return false;\n//         }\n//     };\n\n//     const matchFace = async () => {\n//         const formData = new FormData();\n//         formData.append('selfie', selfie);\n//         formData.append('idCard', idCard);\n\n//         try {\n//             const response = await axios.post('https://ind.idv.hyperverge.co/v1/matchFace', formData, { headers });\n//             return response.data.isMatch;\n//         } catch (error) {\n//             console.error('Error matching face:', error);\n//             setStatus('Face match failed.');\n//             return false;\n//         }\n//     };\n\n//     const handleSubmitDL = async () => {\n//         setStatusMessage('Validating Driver License...');\n//         const isDLValid = await validateDL();\n\n//         if (isDLValid) {\n//             setStep(3);\n//             setStatusMessage(`Driver's License is valid.`);\n//         } else {\n//             setStatusMessage(`Validation failed`);\n//         }\n//     };\n//     const handleSubmitID = async () => {\n//         setStatusMessage('Validating ID Card...');\n//         const isIDValid = await validateIDCard();\n    \n//         if (isIDValid) {\n//             setStep(4); // Proceed to next step after successful ID validation\n//         } else {\n//             setStatusMessage('ID Card validation faileddd.');\n//         }\n//     };\n    \n    \n    \n\n//     const handleSubmitSelfie = async () => {\n//         setStatusMessage('Validating selfie...');\n//         const isSelfieValid = await validateSelfie();\n//         const isFaceMatch = await matchFace();\n//         if (isSelfieValid && isFaceMatch) {\n//             setStatusMessage('KYC process completed successfully.');\n//             setStep(5);\n//         } else {\n//             setStatusMessage('Selfie verification or face match failed.');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Driver KYC Process</h2>\n\n//             {step === 1 && (\n//                 <div>\n//                     <h3>Step 1: Basic Information</h3>\n//                     <input \n//                         type=\"text\" \n//                         placeholder=\"Name\" \n//                         onChange={(e) => setDriverInfo({ ...driverInfo, name: e.target.value })} \n//                     />\n//                     <input \n//                         type=\"text\" \n//                         placeholder=\"Phone\" \n//                         value={driverInfo.phone} \n//                         onChange={(e) => e.target.value.length <= 13 && setDriverInfo({ ...driverInfo, phone: e.target.value })} \n//                     />\n//                     <input \n//                         type=\"email\" \n//                         placeholder=\"Email\" \n//                         value={driverInfo.email} \n//                         onChange={(e) => setDriverInfo({ ...driverInfo, email: e.target.value })} \n//                     />\n//                     <button onClick={() => setStep(2)}>Next</button>\n//                 </div>\n//             )}\n\n//             {step === 2 && (\n//                 <div>\n//                     <h3>Step 2: Upload Driver's License</h3>\n//                     <input \n//                         type=\"file\" \n//                         accept=\".jpg,.png,.pdf\" \n//                         onChange={(e) => handleFileUpload(e, setDriverLicense)} \n//                     />\n//                     <button onClick={handleSubmitDL}>Submit</button>\n//                 </div>\n//             )}\n\n//             {step === 3 && (\n//                 <div>\n//                     <h3>Step 3: Upload ID Card</h3>\n//                     <label>Select ID Type:</label>\n//                     <select value={idType} onChange={(e) => setIdType(e.target.value)}>\n//                         <option value=\"\">--Select--</option>\n//                         <option value=\"aadhaar\">Aadhaar</option>\n//                         <option value=\"passport\">Passport</option>\n//                         <option value=\"pan\">PAN</option>\n//                     </select>\n//                     <input \n//                         type=\"file\" \n//                         accept=\".jpg,.png,.pdf\" \n//                         onChange={(e) => handleFileUpload(e, setIdCard)} \n//                     />\n//                     <button onClick={handleSubmitID}>Submit</button>\n//                 </div>\n//             )}\n\n//             {step === 4 && (\n//                 <div>\n//                     <h3>Step 4: Upload Selfie</h3>\n//                     <input \n//                         type=\"file\" \n//                         accept=\".jpg,.png\" \n//                         onChange={(e) => handleFileUpload(e, setSelfie)} \n//                     />\n//                     <button onClick={handleSubmitSelfie}>Submit</button>\n//                 </div>\n//             )}\n\n//             <p>{statusMessage}</p>\n//         </div>\n//     );\n// }\n\n// export default KYCProcess;\n\n\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}