{"ast":null,"code":"// // frontend/src/components/UserList.js\n// import React, { useEffect, useState } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { Container, Table, Button } from 'react-bootstrap';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// const UserList = () => {\n//     const [users, setUsers] = useState([]);\n//     const navigate = useNavigate();\n\n//     // Fetch users when the component loads\n//     useEffect(() => {\n//         fetch('/api/users')\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error('Error fetching users');\n//                 }\n//                 return response.json();  // Ensure we return response.json()\n//             })\n//             .then(data => {\n//                 console.log(data);\n//                 setUsers(data);  // Set users directly from the backend response\n//             })\n//             .catch(error => {\n//                 console.error('Error fetching users:', error);\n//             });\n//     }, []);\n\n//     // Handle delete user\n//     const handleDelete = (id) => {\n//         fetch(`/api/users/${id}`, {\n//             method: 'DELETE',\n//         })\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error('Error deleting user');\n//                 }\n//                 setUsers(users.filter(user => user._id !== id)); // Remove the deleted user from the list\n//             })\n//             .catch(error => {\n//                 console.error('Error deleting user:', error);\n//             });\n//     };\n\n//     // Handle update user (redirect to update page)\n//     const handleUpdate = (id) => {\n//         navigate(`/update/${id}`);\n//         console.log(`Update user with ID: ${id}`);\n//     };\n\n//     return (\n//         <Container className=\"mt-5\">\n//             <h2 className=\"mb-4\">User List</h2>\n//             <Table striped bordered hover responsive>\n//                 <thead>\n//                     <tr>\n//                         <th>Name</th>\n//                         <th>Email</th>\n//                         <th>Actions</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {users.length > 0 ? (\n//                         users.map((user) => (\n//                             <tr key={user._id}>\n//                                 <td>{user.name}</td>\n//                                 <td>{user.email}</td>\n//                                 <td>\n//                                     <Button onClick={() => handleUpdate(user._id)}>Update</Button>\n//                                     <Button \n//                                         onClick={() => handleDelete(user._id)} \n//                                         className=\"ml-2\" \n//                                         variant=\"danger\">\n//                                         Delete\n//                                     </Button>\n//                                 </td>\n//                             </tr>\n//                         ))\n//                     ) : (\n//                         <tr>\n//                             <td colSpan=\"3\" className=\"text-center\">No users found</td>\n//                         </tr>\n//                     )}\n//                 </tbody>\n//             </Table>\n//             <div className=\"mt-3\">\n//                 <Link to=\"/new\">\n//                     <Button variant=\"primary\">Add New User</Button>\n//                 </Link>\n//             </div>\n//         </Container>\n//     );\n// };\n\n// export default UserList;","map":{"version":3,"names":[],"sources":["/home/user/Desktop/Week-0/MERN-main/frontend/src/components/Displayusers.js"],"sourcesContent":["// // frontend/src/components/UserList.js\r\n// import React, { useEffect, useState } from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import { Container, Table, Button } from 'react-bootstrap';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// const UserList = () => {\r\n//     const [users, setUsers] = useState([]);\r\n//     const navigate = useNavigate();\r\n\r\n//     // Fetch users when the component loads\r\n//     useEffect(() => {\r\n//         fetch('/api/users')\r\n//             .then(response => {\r\n//                 if (!response.ok) {\r\n//                     throw new Error('Error fetching users');\r\n//                 }\r\n//                 return response.json();  // Ensure we return response.json()\r\n//             })\r\n//             .then(data => {\r\n//                 console.log(data);\r\n//                 setUsers(data);  // Set users directly from the backend response\r\n//             })\r\n//             .catch(error => {\r\n//                 console.error('Error fetching users:', error);\r\n//             });\r\n//     }, []);\r\n\r\n//     // Handle delete user\r\n//     const handleDelete = (id) => {\r\n//         fetch(`/api/users/${id}`, {\r\n//             method: 'DELETE',\r\n//         })\r\n//             .then(response => {\r\n//                 if (!response.ok) {\r\n//                     throw new Error('Error deleting user');\r\n//                 }\r\n//                 setUsers(users.filter(user => user._id !== id)); // Remove the deleted user from the list\r\n//             })\r\n//             .catch(error => {\r\n//                 console.error('Error deleting user:', error);\r\n//             });\r\n//     };\r\n\r\n//     // Handle update user (redirect to update page)\r\n//     const handleUpdate = (id) => {\r\n//         navigate(`/update/${id}`);\r\n//         console.log(`Update user with ID: ${id}`);\r\n//     };\r\n\r\n//     return (\r\n//         <Container className=\"mt-5\">\r\n//             <h2 className=\"mb-4\">User List</h2>\r\n//             <Table striped bordered hover responsive>\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th>Name</th>\r\n//                         <th>Email</th>\r\n//                         <th>Actions</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {users.length > 0 ? (\r\n//                         users.map((user) => (\r\n//                             <tr key={user._id}>\r\n//                                 <td>{user.name}</td>\r\n//                                 <td>{user.email}</td>\r\n//                                 <td>\r\n//                                     <Button onClick={() => handleUpdate(user._id)}>Update</Button>\r\n//                                     <Button \r\n//                                         onClick={() => handleDelete(user._id)} \r\n//                                         className=\"ml-2\" \r\n//                                         variant=\"danger\">\r\n//                                         Delete\r\n//                                     </Button>\r\n//                                 </td>\r\n//                             </tr>\r\n//                         ))\r\n//                     ) : (\r\n//                         <tr>\r\n//                             <td colSpan=\"3\" className=\"text-center\">No users found</td>\r\n//                         </tr>\r\n//                     )}\r\n//                 </tbody>\r\n//             </Table>\r\n//             <div className=\"mt-3\">\r\n//                 <Link to=\"/new\">\r\n//                     <Button variant=\"primary\">Add New User</Button>\r\n//                 </Link>\r\n//             </div>\r\n//         </Container>\r\n//     );\r\n// };\r\n\r\n// export default UserList;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}